(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{67:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(2),o=n(6),i=(n(0),n(73)),s=["components"],r={title:"Settings"},l={unversionedId:"settings",id:"settings",isDocsHomePage:!1,title:"Settings",description:"Liking",source:"@site/../docs/settings.md",slug:"/settings",permalink:"/settings",editUrl:"https://github.com/timgrossmann/InstaPy/edit/master/website/../docs/settings.md",version:"current",sidebar:"docs",previous:{title:"Home",permalink:"/"},next:{title:"Actions",permalink:"/actions"}},b=[{value:"Liking",id:"liking",children:[]},{value:"Commenting",id:"commenting",children:[]},{value:"Emoji Support",id:"emoji-support",children:[]},{value:"Following",id:"following",children:[]},{value:"Smart Hashtags",id:"smart-hashtags",children:[]},{value:"Smart Location Hashtags",id:"smart-location-hashtags",children:[]},{value:"Quota Supervisor",id:"quota-supervisor",children:[]},{value:"Restricting Likes",id:"restricting-likes",children:[]},{value:"Ignoring Restrictions",id:"ignoring-restrictions",children:[]},{value:"Ignoring Users",id:"ignoring-users",children:[]},{value:"Excluding friends",id:"excluding-friends",children:[]},{value:"Mandatory Words",id:"mandatory-words",children:[]},{value:"Mandatory Language",id:"mandatory-language",children:[]},{value:"Don&#39;t unfollow active users",id:"dont-unfollow-active-users",children:[]},{value:"Blacklist Campaign",id:"blacklist-campaign",children:[]},{value:"Simulation",id:"simulation",children:[]},{value:"Skipping user for private account, public account, no profile picture, business account, bio keywords",id:"skipping-user-for-private-account-public-account-no-profile-picture-business-account-bio-keywords",children:[]},{value:"Liking based on the number of existing likes a post has",id:"liking-based-on-the-number-of-existing-likes-a-post-has",children:[]},{value:"Commenting based on the number of existing comments a post has",id:"commenting-based-on-the-number-of-existing-comments-a-post-has",children:[]},{value:"Commenting based on mandatory words in the description or first comment",id:"commenting-based-on-mandatory-words-in-the-description-or-first-comment",children:[]},{value:"Interactions based on the number of followers and/or following a user has",id:"interactions-based-on-the-number-of-followers-andor-following-a-user-has",children:[]},{value:"Interactions based on the number of posts a user has",id:"interactions-based-on-the-number-of-posts-a-user-has",children:[]},{value:"Custom action delays",id:"custom-action-delays",children:[]},{value:"Target Lists",id:"target-lists",children:[]}],c={rightToc:b};function p(e){var t=e.components,n=Object(o.a)(e,s);return Object(i.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"liking"},"Liking"),Object(i.b)("p",null,"This method is only needed for the ",Object(i.b)("inlineCode",{parentName:"p"},"interact_by_...")," actions.\nPosts will be liked by default when using ",Object(i.b)("inlineCode",{parentName:"p"},"like_by_...")," actions."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"# ~70% of the by InstaPy viewed posts will be liked\n\nsession.set_do_like(enabled=True, percentage=70)\n")),Object(i.b)("h3",{id:"commenting"},"Commenting"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"# enable comments (by default enabled=False) and set commenting probability to 25% so ~ every 4th image will be commented on\n\nsession.set_do_comment(enabled=True, percentage=25)\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"# Configure a simple list of optional comments, one will be selected at random when commenting:\nsession.set_comments(['Awesome', 'Really Cool', 'I like your stuff'])\n")),Object(i.b)("p",null,"Or configure conditional comments to provide a more contextual commenting based on the caption of the image:\nConditional comments are created as a list of dictionaries, each one contains a definition of\n",Object(i.b)("a",{parentName:"p",href:"#mandatory-words"},"mandatory words")," and a list of comments.\nThe list of conditional comments is scanned until the first item that satisfies the mandatory words condition is found\nand then one of the comments associated with that item is selected at random to be used.\nThis can best be understood with an example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'comments=[\n    # either "icecave" OR "ice_cave" will satisfy this:\n    {\'mandatory_words\': ["icecave", "ice_cave"], \'comments\': ["Nice shot. Ice caves are amazing", "Cool. Aren\'t ice caves just amazing?"]},\n\n    # either "high_mountain" OR ("high" AND "mountain") will satisfy this:\n    {\'mandatory_words\': ["high_mountain", ["high", "mountain"]], \'comments\': ["I just love high mountains"]},\n\n    # Only ("high" AND "tide" together) will satisfy this:\n    {\'mandatory_words\': [["high", "tide"]], \'comments\': ["High tides are better than low"]}\n\n    # Only "summer" AND ("lake" OR "occean") will satisfy this:\n    {\'mandatory_words\': [["summer", ["lake", "occean"]]], \'comments\': ["Summer fun"]}\n\n]\nsession.set_comments(comments)\n')),Object(i.b)("p",null,"You can also set comments for specific media types (Photo / Video)"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_comments(['Nice shot!'], media='Photo')\nsession.set_comments(['Great Video!'], media='Video')\n\n# and you can add the username of the poster to the comment by using\n\nsession.set_comments(['Nice shot! @{}'], media='Photo')\n")),Object(i.b)("h3",{id:"emoji-support"},"Emoji Support"),Object(i.b)("p",null,"To use an emoji just add an ",Object(i.b)("inlineCode",{parentName:"p"},"u")," in front of the opening apostrophe:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_comments([u'This post is \ud83d\udd25',u'More emojis are always better \ud83d\udcaf',u'I love your posts \ud83d\ude0d\ud83d\ude0d\ud83d\ude0d']);\n# or\nsession.set_comments([u'Emoji text codes are also supported :100: :thumbsup: :thumbs_up: \\u2764 \ud83d\udcaf\ud83d\udcaf']);\n")),Object(i.b)("p",null,"Emoji text codes are implemented using 2 different naming codes. A complete list of emojis codes can be found on the ",Object(i.b)("a",{parentName:"p",href:"https://github.com/carpedm20/emoji/blob/master/emoji/unicode_codes.py"},"Python Emoji Github"),", but you can use the alternate shorted naming scheme found for Emoji text codes ",Object(i.b)("a",{parentName:"p",href:"https://www.webpagefx.com/tools/emoji-cheat-sheet"},"here"),". Note: Every Emoji has not been tested. Please report any inconsistencies."),Object(i.b)("h3",{id:"following"},"Following"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"# default enabled=False, follows ~ 10% of the users from the images, times=1\n# (only follows a user once (if unfollowed again))\n\nsession.set_do_follow(enabled=True, percentage=10, times=2)\n")),Object(i.b)("h3",{id:"smart-hashtags"},"Smart Hashtags"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"# Generate smart hashtags based on https://displaypurposes.com ranking,\n# banned and spammy tags are filtered out.\n# (limit) defines amount limit of generated hashtags by hashtag\n# (sort) sort generated hashtag list 'top' and 'random' are available\n# (log_tags) shows generated hashtags before use it\n# (use_smart_hashtags) activates like_by_tag to use smart hashtags\n\nsession.set_smart_hashtags(['cycling', 'roadbike'], limit=3, sort='top', log_tags=True)\nsession.like_by_tags(amount=10, use_smart_hashtags=True)\n")),Object(i.b)("h3",{id:"smart-location-hashtags"},"Smart Location Hashtags"),Object(i.b)("p",null," Generate smart hashtags based on ",Object(i.b)("a",{parentName:"p",href:"https://displaypurposes.com/map"},"https://displaypurposes.com/map")," ranking.\nBanned and spammy tags are filtered out."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"Use_smart_location_hashtags activates like_by_tag to use smart hashtags\n\nsession.set_smart_location_hashtags(['204517928/chicago-illinois', '213570652/nagoya-shi-aichi-japan'], radius=20, limit=10)\nsession.like_by_tags(amount=10, use_smart_location_hashtags=True)\n")),Object(i.b)("h4",{id:"parameters"},"Parameters"),Object(i.b)("p",null," ",Object(i.b)("inlineCode",{parentName:"p"},"radius"),": Radius around the location in Miles\n",Object(i.b)("inlineCode",{parentName:"p"},"limit"),": Defines amount limit of generated hashtags by hashtag\n",Object(i.b)("inlineCode",{parentName:"p"},"log_tags"),": Shows generated hashtags before use it (default is True)"),Object(i.b)("ins",{class:"adsbygoogle","data-ad-layout":"in-article","data-ad-format":"fluid","data-ad-client":"ca-pub-4875789012193531","data-ad-slot":"9530237054"}),Object(i.b)("script",null,"(adsbygoogle = window.adsbygoogle || []).push(",");"),Object(i.b)("h3",{id:"quota-supervisor"},"Quota Supervisor"),Object(i.b)("h6",{id:"take-full-control-of-the-actions-with-the-most-sophisticated-approaches"},"Take full control of the actions with the most sophisticated approaches"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'session.set_quota_supervisor(enabled=True,\n                            sleep_after=["likes", "comments_d", "follows", "unfollows", "server_calls_h"],\n                            sleepyhead=True,\n                            stochastic_flow=True,\n                            notify_me=True,\n                            peak_likes_hourly=57,\n                            peak_likes_daily=585,\n                            peak_comments_hourly=21,\n                            peak_comments_daily=182,\n                            peak_follows_hourly=48,\n                            peak_follows_daily=None,\n                            peak_unfollows_hourly=35,\n                            peak_unfollows_daily=402,\n                            peak_server_calls_hourly=None,\n                            peak_server_calls_daily=4700)\n')),Object(i.b)("h4",{id:"parameters-1"},"Parameters:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"enabled"),": put ",Object(i.b)("inlineCode",{parentName:"p"},"True")," to ",Object(i.b)("strong",{parentName:"p"},"activate")," or ",Object(i.b)("inlineCode",{parentName:"p"},"False")," to ",Object(i.b)("strong",{parentName:"p"},"deactivate")," supervising any time"),Object(i.b)("p",null,"If you ",Object(i.b)("strong",{parentName:"p"},"don't want to")," ",Object(i.b)("em",{parentName:"p"},"supervise")," likes ",Object(i.b)("strong",{parentName:"p"},"at all"),", simply ",Object(i.b)("strong",{parentName:"p"},"remove")," ",Object(i.b)("inlineCode",{parentName:"p"},"peak_likes")," parameter ",Object(i.b)("strong",{parentName:"p"},"OR")," use ",Object(i.b)("inlineCode",{parentName:"p"},"peak_likes=(None, None)"),".\n",Object(i.b)("em",{parentName:"p"},"Once")," likes ",Object(i.b)("strong",{parentName:"p"},"reach")," peak, it will ",Object(i.b)("strong",{parentName:"p"},"jump")," every other like, ",Object(i.b)("em",{parentName:"p"},"yet"),", ",Object(i.b)("strong",{parentName:"p"},"will do all available actions")," (",Object(i.b)("em",{parentName:"p"},"e.g. follow or unfollow"),")."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Only ",Object(i.b)("inlineCode",{parentName:"li"},"server calls")," ",Object(i.b)("strong",{parentName:"li"},"does not")," jump, it exits the program ",Object(i.b)("strong",{parentName:"li"},"once reaches the peak"),".",Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},"Although, you can put server calls to sleep once reaches peak, read ",Object(i.b)("inlineCode",{parentName:"p"},"sleep_after")," parameter."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"Every action")," will be ",Object(i.b)("strong",{parentName:"li"},"jumped")," separately after reaching it's peak, ",Object(i.b)("em",{parentName:"li"},"except")," comments. Cos commenting without a like isn't welcomed that's why as like peak is reached, it will jump comments, too.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"sleep_after"),": is used to put ",Object(i.b)("strong",{parentName:"p"},"InstaPy")," to ",Object(i.b)("em",{parentName:"p"},"sleep")," ",Object(i.b)("strong",{parentName:"p"},"after reaching peak")," ",Object(i.b)("em",{parentName:"p"},"rather than")," ",Object(i.b)("strong",{parentName:"p"},"jumping the action")," (",Object(i.b)("em",{parentName:"p"},"or exiting- ",Object(i.b)("strong",{parentName:"em"},"for")," server calls"),")\n",Object(i.b)("em",{parentName:"p"},"Any action")," can be included ",Object(i.b)("inlineCode",{parentName:"p"},'["likes", "comments", "follows", "unfollows", "server_calls"]'),".\n",Object(i.b)("em",{parentName:"p"},"As if")," you want to put ",Object(i.b)("em",{parentName:"p"},"sleep")," ",Object(i.b)("strong",{parentName:"p"},"only after")," reaching ",Object(i.b)("strong",{parentName:"p"},"hourly")," like peak, put ",Object(i.b)("inlineCode",{parentName:"p"},'"likes_h"')," ",Object(i.b)("strong",{parentName:"p"},"OR")," put ",Object(i.b)("inlineCode",{parentName:"p"},'"likes_d"')," for ",Object(i.b)("em",{parentName:"p"},"sleeping")," ",Object(i.b)("strong",{parentName:"p"},"only after")," reaching ",Object(i.b)("strong",{parentName:"p"},"daily")," like peak.\n",Object(i.b)("em",{parentName:"p"},"such as"),","),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"sleep_after=['follows_h']")," will ",Object(i.b)("em",{parentName:"li"},"sleep")," after reaching ",Object(i.b)("strong",{parentName:"li"},"hourly")," follow peak"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"sleep_after=['likes_d', 'follows', 'server_calls_h']")," will ",Object(i.b)("em",{parentName:"li"},"sleep")," after reaching ",Object(i.b)("strong",{parentName:"li"},"daily")," like peak, follow peaks (",Object(i.b)("em",{parentName:"li"},Object(i.b)("strong",{parentName:"em"},"hourly")," and ",Object(i.b)("strong",{parentName:"em"},"daily")),") and ",Object(i.b)("strong",{parentName:"li"},"hourly")," server call peak.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Notice"),": there can be ",Object(i.b)("em",{parentName:"p"},"either")," ",Object(i.b)("inlineCode",{parentName:"p"},'"likes"')," (",Object(i.b)("em",{parentName:"p"},"for both ",Object(i.b)("strong",{parentName:"em"},"hourly")," and ",Object(i.b)("strong",{parentName:"em"},"daily")," sleep"),") ",Object(i.b)("strong",{parentName:"p"},"OR")," ",Object(i.b)("inlineCode",{parentName:"p"},'"likes_h"')," (",Object(i.b)("em",{parentName:"p"},"for ",Object(i.b)("strong",{parentName:"em"},"hourly")," sleep only"),") ",Object(i.b)("strong",{parentName:"p"},"OR")," ",Object(i.b)("inlineCode",{parentName:"p"},'"likes_d"')," (",Object(i.b)("em",{parentName:"p"},"for ",Object(i.b)("strong",{parentName:"em"},"daily")," sleep only"),")."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("em",{parentName:"p"},"Once")," gone to sleep, it will ",Object(i.b)("strong",{parentName:"p"},"wake up")," as ",Object(i.b)("em",{parentName:"p"},"new")," ",Object(i.b)("strong",{parentName:"p"},"hour"),"/",Object(i.b)("strong",{parentName:"p"},"day")," (",Object(i.b)("em",{parentName:"p"},"according to the interval"),") arrives AND ",Object(i.b)("strong",{parentName:"p"},"continue")," the activity.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"sleepyhead"),": can help to ",Object(i.b)("em",{parentName:"p"},"sound")," ",Object(i.b)("strong",{parentName:"p"},"more humanly")," which will ",Object(i.b)("strong",{parentName:"p"},"wake up a little bit later")," in a randomly chosen time interval around accurate wake up time."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("em",{parentName:"p"},"e.g."),", if remaining time is ",Object(i.b)("inlineCode",{parentName:"p"},"17")," minutes, it will sleep ",Object(i.b)("inlineCode",{parentName:"p"},"20")," minutes instead (",Object(i.b)("em",{parentName:"p"},"random values each time"),")..")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"stochastic_flow"),": can provide ",Object(i.b)("em",{parentName:"p"},"smooth")," peak value generation by your original values."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Every ~",Object(i.b)("strong",{parentName:"li"},"hour"),"/",Object(i.b)("strong",{parentName:"li"},"day")," it will generate peaks ",Object(i.b)("strong",{parentName:"li"},"at close range")," ",Object(i.b)("em",{parentName:"li"},"around")," your ",Object(i.b)("strong",{parentName:"li"},"original peaks")," (",Object(i.b)("em",{parentName:"li"},"but below them"),").",Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("em",{parentName:"p"},"e.g."),", your peak likes ",Object(i.b)("strong",{parentName:"p"},"hourly")," is ",Object(i.b)("inlineCode",{parentName:"p"},"45"),", next hour that peak will be ",Object(i.b)("inlineCode",{parentName:"p"},"39"),", the next ",Object(i.b)("inlineCode",{parentName:"p"},"43"),", etc.")))),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"notify_me"),": sends ",Object(i.b)("strong",{parentName:"p"},"toast notifications")," (",Object(i.b)("em",{parentName:"p"},"directly to your OS"),") ",Object(i.b)("em",{parentName:"p"},"about")," the ",Object(i.b)("strong",{parentName:"p"},"important states of")," ",Object(i.b)("em",{parentName:"p"},"supervisor"),"- ",Object(i.b)("strong",{parentName:"p"},"sleep"),", ",Object(i.b)("strong",{parentName:"p"},"wake up")," and ",Object(i.b)("strong",{parentName:"p"},"exit")," messages."),Object(i.b)("h4",{id:"mini-examples"},"Mini-Examples:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Claudio has written ",Object(i.b)("strong",{parentName:"li"},"a new \ud83d\ude0a quickstart")," script where it ",Object(i.b)("strong",{parentName:"li"},"mostly")," ",Object(i.b)("em",{parentName:"li"},"put likes and comments"),". He wants the program to ",Object(i.b)("strong",{parentName:"li"},"comment safely")," cos he is ",Object(i.b)("em",{parentName:"li"},"afraid of exceeding")," ",Object(i.b)("strong",{parentName:"li"},"hourly")," & ",Object(i.b)("strong",{parentName:"li"},"daily")," comment limits,")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_quota_supervisor(enabled=True, peak_comments_daily=21, peak_comments_hourly=240)\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("em",{parentName:"p"},"That's it! When it reaches the comments peak, it will just jump all of the comments and will again continue to put comments when is available ","[in the next  hour/day]"),".")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Alicia has a ",Object(i.b)("strong",{parentName:"li"},"24"),"/",Object(i.b)("strong",{parentName:"li"},"7")," \ud83d\udd66 working ",Object(i.b)("strong",{parentName:"li"},"quickstart")," script and ",Object(i.b)("strong",{parentName:"li"},"would like to")," keep ",Object(i.b)("em",{parentName:"li"},"server calls")," in control to AVOID ",Object(i.b)("strong",{parentName:"li"},"excessive amount of requests")," to the ",Object(i.b)("em",{parentName:"li"},"server")," in ",Object(i.b)("strong",{parentName:"li"},"hourly")," basis, also,",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"wants")," the program to ",Object(i.b)("strong",{parentName:"li"},"sleep after")," reaching ",Object(i.b)("strong",{parentName:"li"},"hourly")," ",Object(i.b)("em",{parentName:"li"},"server calls")," peak: ",Object(i.b)("strong",{parentName:"li"},"adds")," ",Object(i.b)("inlineCode",{parentName:"li"},'"server_calls_h"')," into ",Object(i.b)("inlineCode",{parentName:"li"},"sleep_after")," parameter"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"wants")," the program to ",Object(i.b)("strong",{parentName:"li"},"wake up")," ",Object(i.b)("em",{parentName:"li"},"a little bit later")," than real sleep time ","[once reaches the peaks]",": ",Object(i.b)("strong",{parentName:"li"},"uses")," ",Object(i.b)("inlineCode",{parentName:"li"},"sleepyhead=True")," parameter")))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'session.set_quota_supervisor(enabled=True, peak_server_calls_daily=490, sleep_after=["server_calls_h"], sleepyhead=True)\n')),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("em",{parentName:"p"},"It will sleep after ",Object(i.b)("strong",{parentName:"em"},"hourly")," server calls reaches its peak given - ",Object(i.b)("inlineCode",{parentName:"em"},"490")," and ",Object(i.b)("strong",{parentName:"em"},"never allow")," one more extra request to the server out of the peak and ",Object(i.b)("strong",{parentName:"em"},"wake up")," when ",Object(i.b)("strong",{parentName:"em"},"new hour")," comes in WHILST ",Object(i.b)("strong",{parentName:"em"},"daily")," server calls ",Object(i.b)("strong",{parentName:"em"},"will not be")," supervised at all- as Alicia wishes"),".")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Sam has a ",Object(i.b)("em",{parentName:"li"},"casual")," \ud83e\udd86 ",Object(i.b)("strong",{parentName:"li"},"quickstart")," script full of ",Object(i.b)("em",{parentName:"li"},"follow"),"/",Object(i.b)("em",{parentName:"li"},"unfollow")," features and he wants to ",Object(i.b)("strong",{parentName:"li"},"do it safely"),", also,",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"is ",Object(i.b)("strong",{parentName:"li"},"gonna")," run on local computer and ",Object(i.b)("strong",{parentName:"li"},"wants")," to receive ",Object(i.b)("strong",{parentName:"li"},"toast notifications")," \ud83d\ude0b on ",Object(i.b)("em",{parentName:"li"},"supervising states"),": ",Object(i.b)("strong",{parentName:"li"},"uses")," ",Object(i.b)("inlineCode",{parentName:"li"},"notify_me")," parameter"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"wants")," QS to ",Object(i.b)("em",{parentName:"li"},"randomize")," his ",Object(i.b)("inlineCode",{parentName:"li"},"pre-defined")," peak values ","[at close range]"," each new ",Object(i.b)("em",{parentName:"li"},"hour"),"/",Object(i.b)("em",{parentName:"li"},"day"),": ",Object(i.b)("strong",{parentName:"li"},"uses")," ",Object(i.b)("inlineCode",{parentName:"li"},"stochastic_flow=True")," parameter"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"wants")," the program to sleep after reaching ",Object(i.b)("strong",{parentName:"li"},"hourly")," ",Object(i.b)("em",{parentName:"li"},"follow")," peak and ",Object(i.b)("strong",{parentName:"li"},"daily")," ",Object(i.b)("em",{parentName:"li"},"unfollow")," peak: ",Object(i.b)("strong",{parentName:"li"},"adds")," ",Object(i.b)("inlineCode",{parentName:"li"},'"follows_h"')," and ",Object(i.b)("inlineCode",{parentName:"li"},'"unfollows_d"'),"into ",Object(i.b)("inlineCode",{parentName:"li"},"sleep_after")," parameter")))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'session.set_quota_supervisor(enabled=True, peak_follows_daily=560, peak_follows_hourly=56, peak_unfollows_hourly=49, peak_unfollows_daily=550, sleep_after=["follows_h", "unfollows_d"], stochastic_flow=True, notify_me=True)\n')),Object(i.b)("hr",null),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"Big Hint"),": ",Object(i.b)("em",{parentName:"p"},"Find your NEED")," \ud83e\udd14 ",Object(i.b)("em",{parentName:"p"},"and supervise it!")),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"EITHER")," ",Object(i.b)("strong",{parentName:"li"},"fully")," configure QS to supervise ",Object(i.b)("strong",{parentName:"li"},"all")," of the ",Object(i.b)("em",{parentName:"li"},"actions")," all time"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"OR")," ",Object(i.b)("strong",{parentName:"li"},"just")," supervise the desired ",Object(i.b)("em",{parentName:"li"},"action"),"(",Object(i.b)("em",{parentName:"li"},"s"),") in desired ",Object(i.b)("em",{parentName:"li"},"interval"),"(",Object(i.b)("em",{parentName:"li"},"s"),") ","[",Object(i.b)("strong",{parentName:"li"},"hourly")," and/or ",Object(i.b)("strong",{parentName:"li"},"daily"),"]"," per your need"))),Object(i.b)("h3",{id:"restricting-likes"},"Restricting Likes"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_dont_like(['#exactmatch', '[startswith', ']endswith', 'broadmatch'])\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},".set_dont_like")," searches the description and owner comments for hashtags and\nwon't like the image if one of those hashtags are in there"),Object(i.b)("p",null,"You have 4 options to exclude posts from your InstaPy session:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"words starting with ",Object(i.b)("inlineCode",{parentName:"li"},"#")," will match only exact hashtags (e. g. ",Object(i.b)("inlineCode",{parentName:"li"},"#cat")," matches ",Object(i.b)("inlineCode",{parentName:"li"},"#cat"),", but not ",Object(i.b)("inlineCode",{parentName:"li"},"#catpic"),")"),Object(i.b)("li",{parentName:"ul"},"words starting with ",Object(i.b)("inlineCode",{parentName:"li"},"[")," will match all hashtags starting with your word (e. g. ",Object(i.b)("inlineCode",{parentName:"li"},"[cat")," matches ",Object(i.b)("inlineCode",{parentName:"li"},"#catpic"),", ",Object(i.b)("inlineCode",{parentName:"li"},"#caturday")," and so on)"),Object(i.b)("li",{parentName:"ul"},"words starting with ",Object(i.b)("inlineCode",{parentName:"li"},"]")," will match all hashtags ending with your word (e. g. ",Object(i.b)("inlineCode",{parentName:"li"},"]cat")," matches ",Object(i.b)("inlineCode",{parentName:"li"},"#mycat"),", ",Object(i.b)("inlineCode",{parentName:"li"},"#instacat")," and so on)"),Object(i.b)("li",{parentName:"ul"},"words without these prefixes will match all hashtags that contain your word regardless if it is placed at the beginning, middle or end of the hashtag (e. g. ",Object(i.b)("inlineCode",{parentName:"li"},"cat")," will match ",Object(i.b)("inlineCode",{parentName:"li"},"#cat"),", ",Object(i.b)("inlineCode",{parentName:"li"},"#mycat"),", ",Object(i.b)("inlineCode",{parentName:"li"},"#caturday"),", ",Object(i.b)("inlineCode",{parentName:"li"},"#rainingcatsanddogs")," and so on)")),Object(i.b)("h3",{id:"ignoring-restrictions"},"Ignoring Restrictions"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"# will ignore the don't like if the description contains\n# one of the given words\n\nsession.set_ignore_if_contains(['glutenfree', 'french', 'tasty'])\n")),Object(i.b)("h3",{id:"ignoring-users"},"Ignoring Users"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"# completely ignore liking images from certain users\n\nsession.set_ignore_users(['random_user', 'another_username'])\n")),Object(i.b)("h3",{id:"excluding-friends"},"Excluding friends"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"# will prevent commenting on and unfollowing your good friends (the images will\n# still be liked)\n\nsession.set_dont_include(['friend1', 'friend2', 'friend3'])\n")),Object(i.b)("h3",{id:"mandatory-words"},"Mandatory Words"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_mandatory_words(['#food', '#instafood'])\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},".set_mandatory_words")," searches the description, location and owner comments for words and\nwill like the image if the mandatory words condition is met.\nThe mandatory words list can be a simple list of words or a nested structure of lists within lists."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},'When using a simple word list the condition between the words is "OR" so if any of the words from the list exists in\nthe image text it will be matched.'),Object(i.b)("li",{parentName:"ul"},'When using a nested list of lists the top level list condition is "OR" and the condition alternates between "AND"\nand "OR" with every nesting level.')),Object(i.b)("p",null,"For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'     # either "icecave" or "ice_cave" will satisfy this:\n     ["icecave", "ice_cave"]\n\n    # either "high_mountain" OR ("high" AND "mountain") will satisfy this:\n    ["high_mountain", ["high", "mountain"]]\n\n    # Only ("high" AND "tide" together) will satisfy this:\n    [["high", "tide"]]\n\n    # Only "summer" AND ("lake" OR "occean") will satisfy this:\n    [["summer", ["lake", "occean"]]\n')),Object(i.b)("h3",{id:"mandatory-language"},"Mandatory Language"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_mandatory_language(enabled=True, character_set=['LATIN'])\nsession.set_mandatory_language(enabled=True, character_set=['LATIN', 'CYRILLIC'])\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},".set_mandatory_language")," restrict the interactions, liking and following if any character of the description is outside of the character sets you selected (the location is not included and non-alphabetic characters are ignored). For example if you choose ",Object(i.b)("inlineCode",{parentName:"p"},"LATIN"),", any character in Cyrillic will flag the post as inappropriate. If you choose 'LATIN' and 'CYRILLIC', any other character sets will flag the post as inappropriate as well."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Available character sets: ",Object(i.b)("inlineCode",{parentName:"li"},"LATIN"),",  ",Object(i.b)("inlineCode",{parentName:"li"},"GREEK"),", ",Object(i.b)("inlineCode",{parentName:"li"},"CYRILLIC"),", ",Object(i.b)("inlineCode",{parentName:"li"},"ARABIC"),", ",Object(i.b)("inlineCode",{parentName:"li"},"HEBREW"),", ",Object(i.b)("inlineCode",{parentName:"li"},"CJK"),", ",Object(i.b)("inlineCode",{parentName:"li"},"HANGUL"),", ",Object(i.b)("inlineCode",{parentName:"li"},"HIRAGANA"),", ",Object(i.b)("inlineCode",{parentName:"li"},"KATAKANA")," and ",Object(i.b)("inlineCode",{parentName:"li"},"THAI"))),Object(i.b)("h3",{id:"dont-unfollow-active-users"},"Don't unfollow active users"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"# Prevents unfollow followers who have liked one of your latest 5 posts\n\nsession.set_dont_unfollow_active_users(enabled=True, posts=5)\n")),Object(i.b)("h3",{id:"blacklist-campaign"},"Blacklist Campaign"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"# Controls your interactions by campaigns.\n# ex. this week InstaPy will like and comment interacting by campaign called\n# 'soccer', next time InstaPy runs, it will not interact again with users in\n# blacklist\n# In general, this means that once we turn off the soccer_campaign again, InstaPy\n# will have no track of the people it interacted with about soccer.\n# This will help you target people only once but several times for different campaigns\n\nsession.set_blacklist(enabled=True, campaign='soccer_campaign')\nsession.set_do_comment(True, percentage=50)\nsession.set_comments(['Neymar is better than CR7', 'Soccer is cool'])\nsession.like_by_tags(['soccer', 'cr7', 'neymar'], amount=100, media='Photo')\n\n")),Object(i.b)("ins",{class:"adsbygoogle","data-ad-layout":"in-article","data-ad-format":"fluid","data-ad-client":"ca-pub-4875789012193531","data-ad-slot":"9530237054"}),Object(i.b)("script",null,"(adsbygoogle = window.adsbygoogle || []).push(",");"),Object(i.b)("h3",{id:"simulation"},"Simulation"),Object(i.b)("h5",{id:"during-indirect-data-retrieval-simulation-happens-to-provide-a-genuine-activity-flow-triggered-by-a-wise-algorithm"},"During indirect data retrieval, ",Object(i.b)("strong",{parentName:"h5"},"simulation")," happens to provide a ",Object(i.b)("em",{parentName:"h5"},"genuine")," activity flow triggered by a wise algorithm."),Object(i.b)("p",null,"To ",Object(i.b)("strong",{parentName:"p"},"turn off")," simulation or to ",Object(i.b)("strong",{parentName:"p"},"decrease")," its occurrence frequency, use ",Object(i.b)("inlineCode",{parentName:"p"},"set_simulation")," setting:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"#use the value of `False` to permanently turn it off\nsession.set_simulation(enabled=False)\n\n#use a desired occurrence percentage\nsession.set_simulation(enabled=True, percentage=66)\n")),Object(i.b)("h3",{id:"skipping-user-for-private-account-public-account-no-profile-picture-business-account-bio-keywords"},"Skipping user for private account, public account, no profile picture, business account, bio keywords"),Object(i.b)("h4",{id:"this-is-used-to-skip-users-with-certain-condition"},"This is used to skip users with certain condition"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_skip_users(skip_private=True,\n                       private_percentage=100,\n                       skip_no_profile_pic=False,\n                       no_profile_pic_percentage=100,\n                       skip_business=False,\n                       skip_non_business=False,\n                       business_percentage=100,\n                       skip_business_categories=[],\n                       dont_skip_business_categories=[],\n                       skip_bio_keyword=[],\n                       mandatory_bio_keywords=[],\n                       skip_public=False,\n                       public_percentage=0)\n")),Object(i.b)("h5",{id:"skip-private-account"},"Skip private account"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"This is done by default")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_skip_users(skip_private=True,\n                       private_percentage=100)\n")),Object(i.b)("p",null,"Will skip users that have private account, even if are followed by running account.\nYou can set a percentage of skipping:\n",Object(i.b)("em",{parentName:"p"},"private_percentage"),"= 100 always skip private users\n",Object(i.b)("em",{parentName:"p"},"private_percentage"),"= 0 never skip private users (so set skip_private=False)"),Object(i.b)("h5",{id:"skip-public-account"},"Skip public account"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_skip_users(skip_private=False,\n                       skip_public=True,\n                       public_percentage=100)\n")),Object(i.b)("p",null,"Will skip users that have public account.\nYou can set a percentage of skipping:\n",Object(i.b)("em",{parentName:"p"},"private_percentage"),"= 100 always skip public users\n",Object(i.b)("em",{parentName:"p"},"private_percentage"),"= 0 never skip public users (so set skip_public=False)"),Object(i.b)("h5",{id:"skip-users-that-dont-have-profile-picture"},"Skip users that don't have profile picture"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_skip_users(skip_private=True,\n                       skip_no_profile_pic=True,\n                       no_profile_pic_percentage=100)\n")),Object(i.b)("p",null,"Will skip users that haven't uploaded yet a profile picture\nYou can set a percentage of skipping:\n",Object(i.b)("em",{parentName:"p"},"no_profile_pic_percentage"),"= 100 always skip users without profile picture\n",Object(i.b)("em",{parentName:"p"},"no_profile_pic_percentage"),"= 0 never skip users without profile picture (so set ",Object(i.b)("em",{parentName:"p"},"skip_no_profile_pic"),"=False)"),Object(i.b)("h5",{id:"skip-users-that-have-business-account"},"Skip users that have business account"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_skip_users(skip_private=True,\n                       skip_no_profile_pic=True,\n                       skip_business=True,\n                       business_percentage=100)\n")),Object(i.b)("p",null,"This will skip all users that have business account activated.\nYou can set a percentage of skipping:\n",Object(i.b)("em",{parentName:"p"},"business_percentage"),"= 100 always skip business users\n",Object(i.b)("em",{parentName:"p"},"business_percentage"),"= 0 never skip business users (so set ",Object(i.b)("em",{parentName:"p"},"skip_business"),"=False)"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"N.B.:")," This ",Object(i.b)("em",{parentName:"p"},"business_percentage")," parameter works only if no ",Object(i.b)("em",{parentName:"p"},"skip_business_categories")," or ",Object(i.b)("em",{parentName:"p"},"dont_skip_business_categories")," are provided!"),Object(i.b)("h6",{id:"skip-only-users-that-have-certain-business-account"},"Skip only users that have certain business account"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_skip_users(skip_private=True,\n                       skip_no_profile_pic=True,\n                       skip_business=True,\n                       skip_business_categories=['Creators & Celebrities'])\n")),Object(i.b)("p",null,"This will skip all business accounts that have category in given list\n",Object(i.b)("strong",{parentName:"p"},"N.B.")," In ",Object(i.b)("em",{parentName:"p"},"skip_business_categories")," you can add more than one category"),Object(i.b)("h6",{id:"skip-all-business-accounts-except-from-list-given"},"Skip all business accounts, except from list given"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_skip_users(skip_private=True,\n                       skip_no_profile_pic=True,\n                       skip_business=True,\n                       dont_skip_business_categories=['Creators & Celebrities'])\n")),Object(i.b)("p",null,"This will skip all business accounts except the ones that have a category that matches one item in the list of ",Object(i.b)("em",{parentName:"p"},"dont_skip_business_categories"),"\n",Object(i.b)("strong",{parentName:"p"},"N.B.")," If both ",Object(i.b)("em",{parentName:"p"},"dont_skip_business_categories")," and ",Object(i.b)("em",{parentName:"p"},"skip_business_categories"),", InstaPy will skip only business accounts in the list given from ",Object(i.b)("em",{parentName:"p"},"skip_business_categories"),"."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("a",{parentName:"p",href:"https://github.com/InstaPy/instapy-docs/blob/master/BUSINESS_CATEGORIES.md"},"A list of all available business categories can be found here"))),Object(i.b)("h6",{id:"skip-all-non-business-and-bussines-accounts-except-from-list-given"},"Skip all non business and bussines accounts, except from list given"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_skip_users(skip_private=True,\n                       skip_no_profile_pic=True,\n                       skip_business=True,\n                       skip_non_business=True,\n                       dont_skip_business_categories=['Creators &  Celebrities'])\n")),Object(i.b)("p",null," This will skip all non business and business accounts except categories in ",Object(i.b)("em",{parentName:"p"},"dont_skip_business_categories"),"."),Object(i.b)("h6",{id:"skip-based-on-bio-keywords"},"Skip based on bio keywords"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'session.set_skip_users(skip_bio_keyword=["lifestyle"],\n                       mandatory_bio_keywords=["art", "photography"])\n')),Object(i.b)("p",null,'This will skip users that have "lifestyle" and users that don\'t have "art" or "photography" in their bio or username.\nSee the ',Object(i.b)("a",{parentName:"p",href:"#mandatory-words"},"Mandatory Words")," section for details on how to define complex mandatory words conditions."),Object(i.b)("ins",{class:"adsbygoogle","data-ad-layout":"in-article","data-ad-format":"fluid","data-ad-client":"ca-pub-4875789012193531","data-ad-slot":"9530237054"}),Object(i.b)("script",null,"(adsbygoogle = window.adsbygoogle || []).push(",");"),Object(i.b)("h3",{id:"liking-based-on-the-number-of-existing-likes-a-post-has"},"Liking based on the number of existing likes a post has"),Object(i.b)("h5",{id:"this-is-used-to-check-the-number-of-existing-likes-a-post-has-and-if-it-either-exceed-the-maximum-value-set-or-does-not-pass-the-minimum-value-set-then-it-will-not-like-that-post"},"This is used to check the number of existing likes a post has and if it ",Object(i.b)("em",{parentName:"h5"},"either")," ",Object(i.b)("strong",{parentName:"h5"},"exceed")," the ",Object(i.b)("em",{parentName:"h5"},"maximum")," value set OR ",Object(i.b)("strong",{parentName:"h5"},"does not pass")," the ",Object(i.b)("em",{parentName:"h5"},"minimum")," value set then it will not like that post"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_delimit_liking(enabled=True, max_likes=1005, min_likes=20)\n")),Object(i.b)("p",null,"Use ",Object(i.b)("inlineCode",{parentName:"p"},"enabled=True")," to ",Object(i.b)("strong",{parentName:"p"},"activate")," and ",Object(i.b)("inlineCode",{parentName:"p"},"enabled=False")," to ",Object(i.b)("strong",{parentName:"p"},"deactivate")," it, ",Object(i.b)("em",{parentName:"p"},"any time"),"\n",Object(i.b)("inlineCode",{parentName:"p"},"max")," is the maximum number of likes to compare\n",Object(i.b)("inlineCode",{parentName:"p"},"min")," is the minimum number of likes to compare"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"You can use ",Object(i.b)("strong",{parentName:"p"},"both")," ",Object(i.b)("em",{parentName:"p"},"max")," & ",Object(i.b)("em",{parentName:"p"},"min")," values OR ",Object(i.b)("strong",{parentName:"p"},"one of them")," ",Object(i.b)("em",{parentName:"p"},"as you desire"),", just ",Object(i.b)("strong",{parentName:"p"},"put")," the value of ",Object(i.b)("inlineCode",{parentName:"p"},"None")," ",Object(i.b)("em",{parentName:"p"},"to the one")," you ",Object(i.b)("strong",{parentName:"p"},"don't want to")," check for., ",Object(i.b)("em",{parentName:"p"},"e.g."),","),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_delimit_liking(enabled=True, max_likes=242, min_likes=None)\n")),Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("em",{parentName:"p"},"at this configuration above, it ",Object(i.b)("strong",{parentName:"em"},"will not")," check number of the existing likes against ",Object(i.b)("strong",{parentName:"em"},"minimum")," value"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("em",{parentName:"strong"},"Example")),":")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_delimit_liking(enabled=True, max_likes=500, min_likes=7)\n")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"Now"),", if a post has more existing likes than maximum value of ",Object(i.b)("inlineCode",{parentName:"em"},"500"),", then it will not like that post,\n",Object(i.b)("strong",{parentName:"em"},"similarly"),", if that post has less existing likes than the minimum value of ",Object(i.b)("inlineCode",{parentName:"em"},"7"),", then it will not like that post...")),Object(i.b)("h3",{id:"commenting-based-on-the-number-of-existing-comments-a-post-has"},"Commenting based on the number of existing comments a post has"),Object(i.b)("h5",{id:"this-is-used-to-check-the-number-of-existing-comments-a-post-has-and-if-it-either-exceed-the-maximum-value-set-or-does-not-pass-the-minimum-value-set-then-it-will-not-comment-on-that-post"},"This is used to check the number of existing comments a post has and if it ",Object(i.b)("em",{parentName:"h5"},"either")," ",Object(i.b)("strong",{parentName:"h5"},"exceed")," the ",Object(i.b)("em",{parentName:"h5"},"maximum")," value set OR ",Object(i.b)("strong",{parentName:"h5"},"does not pass")," the ",Object(i.b)("em",{parentName:"h5"},"minimum")," value set then it will not comment on that post"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_delimit_commenting(enabled=True, max_comments=32, min_comments=0)\n")),Object(i.b)("p",null,"Use ",Object(i.b)("inlineCode",{parentName:"p"},"enabled=True")," to ",Object(i.b)("strong",{parentName:"p"},"activate")," and ",Object(i.b)("inlineCode",{parentName:"p"},"enabled=False")," to ",Object(i.b)("strong",{parentName:"p"},"deactivate")," it, ",Object(i.b)("em",{parentName:"p"},"any time"),"\n",Object(i.b)("inlineCode",{parentName:"p"},"max")," is the maximum number of comments to compare\n",Object(i.b)("inlineCode",{parentName:"p"},"min")," is the minimum number of comments to compare"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"You can use ",Object(i.b)("strong",{parentName:"p"},"both")," ",Object(i.b)("em",{parentName:"p"},"max")," & ",Object(i.b)("em",{parentName:"p"},"min")," values OR ",Object(i.b)("strong",{parentName:"p"},"one of them")," ",Object(i.b)("em",{parentName:"p"},"as you desire"),", just ",Object(i.b)("strong",{parentName:"p"},"leave")," it out or ",Object(i.b)("strong",{parentName:"p"},"put")," it to ",Object(i.b)("inlineCode",{parentName:"p"},"None")," ",Object(i.b)("em",{parentName:"p"},"to the one")," you ",Object(i.b)("strong",{parentName:"p"},"don't want to")," check for., ",Object(i.b)("em",{parentName:"p"},"e.g."),","),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_delimit_commenting(enabled=True, min_comments=4)\n# or\nsession.set_delimit_commenting(enabled=True, max_comments=None, min_comments=4)\n")),Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("em",{parentName:"p"},"at this configuration above, it ",Object(i.b)("strong",{parentName:"em"},"will not")," check number of the existing comments against ",Object(i.b)("strong",{parentName:"em"},"maximum")," value"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("em",{parentName:"strong"},"Example")),":")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_delimit_commenting(enabled=True, max_comments=70, min_comments=5)\n")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"Now"),", if a post has more comments than the maximum value of ",Object(i.b)("inlineCode",{parentName:"em"},"70"),", then it will not comment on that post,\n",Object(i.b)("strong",{parentName:"em"},"similarly"),", if that post has less comments than the minimum value of ",Object(i.b)("inlineCode",{parentName:"em"},"5"),", then it will not comment on that post...")),Object(i.b)("h3",{id:"commenting-based-on-mandatory-words-in-the-description-or-first-comment"},"Commenting based on mandatory words in the description or first comment"),Object(i.b)("h5",{id:"this-is-used-to-check-the-description-of-the-post-and-the-first-comment-of-the-post-some-users-only-put-tags-in-the-comments-instead-of-the-post-description-for-the-occurrence-of-mandatory-words-before-commenting-if-none-of-the-mandatory-words-is-present-the-post-will-not-be-commented"},"This is used to check the description of the post and the first comment of the post (some users only put tags in the comments instead of the post description) for the occurrence of mandatory words before commenting. If none of the mandatory words is present, the post will not be commented."),Object(i.b)("p",null,"This feature is helpful when you want to comment only on specific tags."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_delimit_commenting(enabled=True, comments_mandatory_words=['cat', 'dog'])\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"This will only comment on posts that contain ",Object(i.b)("strong",{parentName:"p"},"either")," cat or dog in the post description or first comment.\nYou can also require sets of words. See the ",Object(i.b)("a",{parentName:"p",href:"#commenting"},"Commenting")," section for detains on how to do that")),Object(i.b)("h3",{id:"interactions-based-on-the-number-of-followers-andor-following-a-user-has"},"Interactions based on the number of followers and/or following a user has"),Object(i.b)("h5",{id:"this-is-used-to-check-the-number-of-followers-andor-following-a-user-has-and-if-these-numbers-either-exceed-the-number-set-or-does-not-pass-the-number-set-or-if-their-ratio-does-not-reach-desired-potency-ratio-then-no-further-interaction-happens"},"This is used to check the number of ",Object(i.b)("em",{parentName:"h5"},"followers")," and/or ",Object(i.b)("em",{parentName:"h5"},"following")," a user has and if these numbers ",Object(i.b)("em",{parentName:"h5"},"either")," ",Object(i.b)("strong",{parentName:"h5"},"exceed")," the number set OR ",Object(i.b)("strong",{parentName:"h5"},"does not pass")," the number set OR if ",Object(i.b)("strong",{parentName:"h5"},"their ratio does not reach")," desired potency ratio then no further interaction happens"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_relationship_bounds(enabled=True,\n                                potency_ratio=1.34,\n                                delimit_by_numbers=True,\n                                max_followers=8500,\n                                max_following=4490,\n                                min_followers=100,\n                                min_following=56,\n                                min_posts=10,\n                                max_posts=1000)\n")),Object(i.b)("p",null,"Use ",Object(i.b)("inlineCode",{parentName:"p"},"enabled=True")," to ",Object(i.b)("strong",{parentName:"p"},"activate")," this feature, and ",Object(i.b)("inlineCode",{parentName:"p"},"enabled=False")," to ",Object(i.b)("strong",{parentName:"p"},"deactivate")," it, ",Object(i.b)("em",{parentName:"p"},"any time"),"\n",Object(i.b)("inlineCode",{parentName:"p"},"delimit_by_numbers")," is used to ",Object(i.b)("strong",{parentName:"p"},"activate")," & ",Object(i.b)("strong",{parentName:"p"},"deactivate")," the usage of max & min values\n",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio")," accepts values in ",Object(i.b)("strong",{parentName:"p"},"2 format"),"s ",Object(i.b)("em",{parentName:"p"},"according to your")," ",Object(i.b)("strong",{parentName:"p"},"style"),": ",Object(i.b)("em",{parentName:"p"},"positive")," & ",Object(i.b)("em",{parentName:"p"},"negative")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio")," with ",Object(i.b)("strong",{parentName:"p"},"POSITIVE")," values can be used to ",Object(i.b)("em",{parentName:"p"},"route")," interactions to ",Object(i.b)("em",{parentName:"p"},"only")," ",Object(i.b)("strong",{parentName:"p"},"potential")," (",Object(i.b)("em",{parentName:"p"},"real"),") ",Object(i.b)("strong",{parentName:"p"},"users")," ",Object(i.b)("em",{parentName:"p"},"WHOSE")," ",Object(i.b)("strong",{parentName:"p"},"followers count")," is higher than ",Object(i.b)("strong",{parentName:"p"},"following count")," (",Object(i.b)("strong",{parentName:"p"},"e.g."),", ",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio = 1.39"),")\n",Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"find")," desired")," ",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio")," ",Object(i.b)("em",{parentName:"p"},"with this formula"),": ",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio")," == ",Object(i.b)("strong",{parentName:"p"},"followers count")," / ",Object(i.b)("strong",{parentName:"p"},"following count"),"  (",Object(i.b)("em",{parentName:"p"},"use desired counts"),")"),Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"e.g.")),", target user has ",Object(i.b)("em",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"em"},"5000")," followers")," & ",Object(i.b)("em",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"em"},"4000")," following")," and you set ",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio=1.35"),".\n",Object(i.b)("strong",{parentName:"p"},"Now")," it ",Object(i.b)("em",{parentName:"p"},"will ",Object(i.b)("strong",{parentName:"em"},"not")," interact")," with this user, ",Object(i.b)("strong",{parentName:"p"},"cos")," the user's ",Object(i.b)("strong",{parentName:"p"},"relationship ratio")," is ",Object(i.b)("inlineCode",{parentName:"p"},"5000/4000==1.25")," and ",Object(i.b)("inlineCode",{parentName:"p"},"1.25")," is ",Object(i.b)("strong",{parentName:"p"},"below")," ",Object(i.b)("em",{parentName:"p"},"desired")," ",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio")," ",Object(i.b)("em",{parentName:"p"},"of ",Object(i.b)("inlineCode",{parentName:"em"},"1.35"))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio")," with ",Object(i.b)("strong",{parentName:"p"},"NEGATIVE")," values can be used to ",Object(i.b)("em",{parentName:"p"},"route")," interactions to ",Object(i.b)("em",{parentName:"p"},"only")," ",Object(i.b)("strong",{parentName:"p"},"massive followers")," ",Object(i.b)("em",{parentName:"p"},"WHOSE")," ",Object(i.b)("strong",{parentName:"p"},"following count")," is higher than ",Object(i.b)("strong",{parentName:"p"},"followers count")," (",Object(i.b)("strong",{parentName:"p"},"e.g."),", ",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio = -1.42"),")\n",Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"find")," desired")," ",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio")," ",Object(i.b)("em",{parentName:"p"},"with this formula"),": ",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio")," == ",Object(i.b)("strong",{parentName:"p"},"following count")," / ",Object(i.b)("strong",{parentName:"p"},"followers count"),"  (",Object(i.b)("em",{parentName:"p"},"use desired counts"),")"),Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"e.g.")),", target user has ",Object(i.b)("em",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"em"},"2000")," followers")," & ",Object(i.b)("em",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"em"},"3000")," following")," and you set ",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio = -1.7"),".\n",Object(i.b)("strong",{parentName:"p"},"Now")," it ",Object(i.b)("em",{parentName:"p"},"will ",Object(i.b)("strong",{parentName:"em"},"not")," interact")," with this user, ",Object(i.b)("strong",{parentName:"p"},"cos")," the user's ",Object(i.b)("strong",{parentName:"p"},"relationship ratio")," is ",Object(i.b)("inlineCode",{parentName:"p"},"3000/2000==1.5")," and ",Object(i.b)("inlineCode",{parentName:"p"},"1.5")," is ",Object(i.b)("strong",{parentName:"p"},"below")," ",Object(i.b)("em",{parentName:"p"},"desired")," ",Object(i.b)("inlineCode",{parentName:"p"},"potency_ratio")," ",Object(i.b)("em",{parentName:"p"},"of ",Object(i.b)("inlineCode",{parentName:"em"},"1.7"))," (",Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"note that"),", negative ",Object(i.b)("inlineCode",{parentName:"em"},"-")," sign is only used to determine your style, nothing more"),")")))),Object(i.b)("h6",{id:"there-are-3-combinations-available-to-use"},"There are ",Object(i.b)("strong",{parentName:"h6"},"3")," ",Object(i.b)("strong",{parentName:"h6"},"COMBINATIONS")," ",Object(i.b)("em",{parentName:"h6"},"available")," to use:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"1"),". You can use ",Object(i.b)("inlineCode",{parentName:"li"},"potency_ratio")," ",Object(i.b)("strong",{parentName:"li"},"or not")," (",Object(i.b)("strong",{parentName:"li"},"e.g."),", ",Object(i.b)("inlineCode",{parentName:"li"},"potency_ratio=None"),", ",Object(i.b)("inlineCode",{parentName:"li"},"delimit_by_numbers=True"),") - ",Object(i.b)("em",{parentName:"li"},"will decide only by your ",Object(i.b)("strong",{parentName:"em"},"pre-defined")," max & min values regardless of the")," ",Object(i.b)("inlineCode",{parentName:"li"},"potency_ratio"))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_relationship_bounds(enabled=True, potency_ratio=None, delimit_by_numbers=True, max_followers=22668, max_following=10200, min_followers=400, min_following=240)\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"2"),". You can use ",Object(i.b)("strong",{parentName:"li"},"only")," ",Object(i.b)("inlineCode",{parentName:"li"},"potency_ratio")," (",Object(i.b)("strong",{parentName:"li"},"e.g."),", ",Object(i.b)("inlineCode",{parentName:"li"},"potency_ratio=-1.5"),", ",Object(i.b)("inlineCode",{parentName:"li"},"delimit_by_numbers=False"),") - ",Object(i.b)("em",{parentName:"li"},"will decide per")," ",Object(i.b)("inlineCode",{parentName:"li"},"potency_ratio")," ",Object(i.b)("em",{parentName:"li"},"regardless of the ",Object(i.b)("strong",{parentName:"em"},"pre-defined")," max & min values"))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_relationship_bounds(enabled=True, potency_ratio=-1.5, delimit_by_numbers=False, max_followers=400701, max_following=90004, min_followers=963, min_following=2310)\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"apparently, ",Object(i.b)("em",{parentName:"p"},"once")," ",Object(i.b)("inlineCode",{parentName:"p"},"delimit_by_numbers")," gets ",Object(i.b)("inlineCode",{parentName:"p"},"False")," value, max & min values ",Object(i.b)("em",{parentName:"p"},"do not matter")),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"3"),". You can use both ",Object(i.b)("inlineCode",{parentName:"li"},"potency_ratio")," and ",Object(i.b)("strong",{parentName:"li"},"pre-defined")," max & min values ",Object(i.b)("strong",{parentName:"li"},"together")," (",Object(i.b)("strong",{parentName:"li"},"e.g."),", ",Object(i.b)("inlineCode",{parentName:"li"},"potency_ratio=2.35"),", ",Object(i.b)("inlineCode",{parentName:"li"},"delimit_by_numbers=True"),") - ",Object(i.b)("em",{parentName:"li"},"will decide per")," ",Object(i.b)("inlineCode",{parentName:"li"},"potency_ratio")," ",Object(i.b)("em",{parentName:"li"},"& your ",Object(i.b)("strong",{parentName:"em"},"pre-defined")," max & min values"))),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_relationship_bounds(enabled=True, potency_ratio=2.35, delimit_by_numbers=True, max_followers=10005, max_following=24200, min_followers=77, min_following=500)\n"))),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"All")," of the ",Object(i.b)("strong",{parentName:"p"},"4")," max & min values are ",Object(i.b)("em",{parentName:"p"},"able to ",Object(i.b)("strong",{parentName:"em"},"freely")," operate"),", ",Object(i.b)("strong",{parentName:"p"},"e.g."),", you may want to ",Object(i.b)("em",{parentName:"p"},Object(i.b)("strong",{parentName:"em"},"only")," delimit")," ",Object(i.b)("inlineCode",{parentName:"p"},"max_followers")," and ",Object(i.b)("inlineCode",{parentName:"p"},"min_following")," (",Object(i.b)("strong",{parentName:"p"},"e.g."),", ",Object(i.b)("inlineCode",{parentName:"p"},"max_followers=52639"),", ",Object(i.b)("inlineCode",{parentName:"p"},"max_following=None"),", ",Object(i.b)("inlineCode",{parentName:"p"},"min_followers=None"),", ",Object(i.b)("inlineCode",{parentName:"p"},"min_following=2240"),")"),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_relationship_bounds(enabled=True, potency_ratio=-1.44, delimit_by_numbers=True, max_followers=52639, max_following=None, min_followers=None, min_following=2240)\n"))),Object(i.b)("h3",{id:"interactions-based-on-the-number-of-posts-a-user-has"},"Interactions based on the number of posts a user has"),Object(i.b)("h4",{id:"this-is-used-to-check-number-of-posts-of-a-user-and-skip-if-they-arent-in-the-boundaries-provided"},"This is used to check number of posts of a user and skip if they aren't in the boundaries provided"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_relationship_bounds(min_posts=10,\n                                 max_posts=1000)\n")),Object(i.b)("p",null,"Users that have more than 1000 posts or less than 10 will be discarded"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"N.B.:")," It is up to the user to check that ",Object(i.b)("inlineCode",{parentName:"p"},"min_posts < max_posts")),Object(i.b)("p",null,"You can also set only one parameter at a time:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_relationship_bounds(max_posts=1000)\n")),Object(i.b)("p",null,"Will skip only users that have more than 1000 posts in their feed"),Object(i.b)("h3",{id:"custom-action-delays"},"Custom action delays"),Object(i.b)("h6",{id:"after-doing-each-action--like-comment-follow-unfollow-or-story-there-is-a-sleep-delay-to-provide-smooth-activity-flow"},Object(i.b)("em",{parentName:"h6"},"After doing each action- like, comment, follow, unfollow or story, there is a sleep delay to provide smooth activity flow"),"."),Object(i.b)("h5",{id:"but-you-can-set-a-custom-sleep-delay-for-each-action-yourself-by-using-the-set_action_delays-setting"},"But you can set a ",Object(i.b)("em",{parentName:"h5"},"custom")," sleep delay for each action yourself by using the ",Object(i.b)("inlineCode",{parentName:"h5"},"set_action_delays")," setting!"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_action_delays(enabled=True,\n                           like=3,\n                           comment=5,\n                           follow=4.17,\n                           unfollow=28,\n                           story=10)\n")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Now it will sleep ",Object(i.b)("inlineCode",{parentName:"em"},"3")," seconds ",Object(i.b)("strong",{parentName:"em"},"after putting every single like"),", ",Object(i.b)("inlineCode",{parentName:"em"},"5")," seconds for every single comment and similarly for the others..")),Object(i.b)("p",null,"You can also customize the sleep delay of ",Object(i.b)("em",{parentName:"p"},"e.g.")," ",Object(i.b)("strong",{parentName:"p"},"only the likes"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_action_delays(enabled=True, like=3)\n")),Object(i.b)("h5",{id:"wanna-go-smarter---use-random_range_from-and-random_range_to"},"Wanna go smarter? - use ",Object(i.b)("inlineCode",{parentName:"h5"},"random_range_from")," and ",Object(i.b)("inlineCode",{parentName:"h5"},"random_range_to")),Object(i.b)("p",null,"By just enabling ",Object(i.b)("inlineCode",{parentName:"p"},"randomize")," parameter, you can ",Object(i.b)("strong",{parentName:"p"},"enjoy")," having random sleep delays at desired range, e.g.,"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_action_delays(enabled=True, like=5.2, randomize=True, random_range_from=70, random_range_to=140)\n")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"There, it will have a ",Object(i.b)("strong",{parentName:"em"},"random sleep delay between")," ",Object(i.b)("inlineCode",{parentName:"em"},"3.64")," ("),Object(i.b)("inlineCode",{parentName:"p"},"70"),"% of ",Object(i.b)("inlineCode",{parentName:"p"},"5.2"),Object(i.b)("em",{parentName:"p"},") and ",Object(i.b)("inlineCode",{parentName:"em"},"7.28"),"("),Object(i.b)("inlineCode",{parentName:"p"},"140"),"% of ",Object(i.b)("inlineCode",{parentName:"p"},"5.2"),Object(i.b)("em",{parentName:"p"},") seconds _each time")," ",Object(i.b)("strong",{parentName:"p"},"after putting a like"),"._"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"You can also put ",Object(i.b)("strong",{parentName:"li"},"only the max range")," as- ",Object(i.b)("inlineCode",{parentName:"li"},"random_range_from=None, random_range_to=200"),"\nThen, the ",Object(i.b)("em",{parentName:"li"},"min range will automatically be")," ",Object(i.b)("inlineCode",{parentName:"li"},"100"),"%- the same time delay itself.\nAnd the random sleep delays will be between ",Object(i.b)("inlineCode",{parentName:"li"},"5.2")," and ",Object(i.b)("inlineCode",{parentName:"li"},"10.4")," seconds."),Object(i.b)("li",{parentName:"ul"},"If you put ",Object(i.b)("strong",{parentName:"li"},"only the min range")," as- ",Object(i.b)("inlineCode",{parentName:"li"},"random_range_from=70, random_range_to=None"),"\nThen, the ",Object(i.b)("em",{parentName:"li"},"max range will automatically be")," ",Object(i.b)("inlineCode",{parentName:"li"},"100"),"%- the same time delay itself.\nAnd the random sleep delays will be between ",Object(i.b)("inlineCode",{parentName:"li"},"3.64")," and ",Object(i.b)("inlineCode",{parentName:"li"},"5.2")," seconds."),Object(i.b)("li",{parentName:"ul"},"But if you ",Object(i.b)("strong",{parentName:"li"},"put ",Object(i.b)("inlineCode",{parentName:"strong"},"None")," to both")," min & max ranges as- ",Object(i.b)("inlineCode",{parentName:"li"},"random_range_from=None, random_range_to=None"),"\nThen no randomization will occur and the sleep delay will always be ",Object(i.b)("inlineCode",{parentName:"li"},"5.2")," seconds."),Object(i.b)("li",{parentName:"ul"},"Heh! You ",Object(i.b)("strong",{parentName:"li"},"mistakenly put")," min range instead of max range as- ",Object(i.b)("inlineCode",{parentName:"li"},"random_range_from=100, random_range_to=70"),"?\nNo worries. It will automatically take the smaller number as min and the bigger one as max."),Object(i.b)("li",{parentName:"ul"},"Make sure to use the values ",Object(i.b)("strong",{parentName:"li"},"bigger than ",Object(i.b)("inlineCode",{parentName:"strong"},"0"))," for the ",Object(i.b)("inlineCode",{parentName:"li"},"random_rage")," percentages.\nE.g. ",Object(i.b)("inlineCode",{parentName:"li"},"random_range_from=-10, random_range_to=140")," is an invalid range and no randomization will happen."),Object(i.b)("li",{parentName:"ul"},"You can provide ",Object(i.b)("strong",{parentName:"li"},"floating point numbers")," as percentages, too!\n",Object(i.b)("inlineCode",{parentName:"li"},"random_range_from=70.7, random_range_to=200.45")," will work greatly.")),Object(i.b)("h6",{id:"note-there-is-a-minimum-default-delay-for-each-action-and-if-you-enter-a-smaller-time-of-delay-than-the-default-value-then-it-will-pick-the-default-value-you-can-turn-that-behaviour-off-with-safety_match-parameter"},"Note: There is a ",Object(i.b)("em",{parentName:"h6"},"minimum")," ",Object(i.b)("strong",{parentName:"h6"},"default")," delay for each action and if you enter a smaller time of delay than the default value, then it will ",Object(i.b)("strong",{parentName:"h6"},"pick the default value"),". You can turn that behaviour off with ",Object(i.b)("inlineCode",{parentName:"h6"},"safety_match")," parameter."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"session.set_action_delays(enabled=True, like=0.15, safety_match=False)\n")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"It has been held due to safety considerations. Cos sleeping a respective time after doing actions- for example ~",Object(i.b)("inlineCode",{parentName:"em"},"10")," seconds after an unfollow, is very important to avoid possible temporary blocks and if you might enter e.g. ",Object(i.b)("inlineCode",{parentName:"em"},"3")," seconds for that without realizing the outcome...")),Object(i.b)("h3",{id:"target-lists"},"Target Lists"),Object(i.b)("h4",{id:"this-is-used-to-parse-text-files-containing-target-lists-of-users-hashtags-comments-etc"},"This is used to parse text files containing target lists of users, hashtags, comments etc"),Object(i.b)("p",null,"For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'# Like posts based on hashtags\nhashtags = session.target_list("C:\\\\Users\\\\......\\\\hashtags.txt")\nsession.like_by_tags(hashtags, amount=10)\n\n# Follow the followers of each given user\nusers = session.target_list("C:\\\\Users\\\\......\\\\users.txt")\nsession.follow_user_followers(users, amount=10, randomize=False)\n')),Object(i.b)("p",null,"Note that your text file should look like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"hashtag1\nhashtag2\nhashtag3\n")),Object(i.b)("p",null,"or"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"user1\nuser2\nuser3\n")),Object(i.b)("p",null,"Functions you can use ",Object(i.b)("inlineCode",{parentName:"p"},"target_list")," with:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"story_by_user"),", ",Object(i.b)("inlineCode",{parentName:"p"},"story_by_tag"),", ",Object(i.b)("inlineCode",{parentName:"p"},"like_by_tags"),", ",Object(i.b)("inlineCode",{parentName:"p"},"follow_by_tags"),", ",Object(i.b)("inlineCode",{parentName:"p"},"follow_user_followers"),", ",Object(i.b)("inlineCode",{parentName:"p"},"follow_user_following"),", ",Object(i.b)("inlineCode",{parentName:"p"},"follow_likers"),", ",Object(i.b)("inlineCode",{parentName:"p"},"follow_commenters"),", ",Object(i.b)("inlineCode",{parentName:"p"},"follow_by_list"),", ",Object(i.b)("inlineCode",{parentName:"p"},"set_skip_users"),", ",Object(i.b)("inlineCode",{parentName:"p"},"set_ignore_users"),", ",Object(i.b)("inlineCode",{parentName:"p"},"set_dont_include"),", ",Object(i.b)("inlineCode",{parentName:"p"},"interact_by_users"),", ",Object(i.b)("inlineCode",{parentName:"p"},"interact_by_users_tagged_posts"),", ",Object(i.b)("inlineCode",{parentName:"p"},"interact_user_followers"),", ",Object(i.b)("inlineCode",{parentName:"p"},"interact_user_following"),", ",Object(i.b)("inlineCode",{parentName:"p"},"interact_by_comments"),", ",Object(i.b)("inlineCode",{parentName:"p"},"set_comments"),", ",Object(i.b)("inlineCode",{parentName:"p"},"set_comment_replies"),", ",Object(i.b)("inlineCode",{parentName:"p"},"set_mandatory_words"),", ",Object(i.b)("inlineCode",{parentName:"p"},"unfollow_users")))}p.isMDXComponent=!0},73:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),o=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var b=o.a.createContext({}),c=function(e){var t=o.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return o.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=c(n),u=a,d=p["".concat(s,".").concat(u)]||p[u]||m[u]||i;return n?o.a.createElement(d,r(r({ref:t},b),{},{components:n})):o.a.createElement(d,r({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=u;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:a,s[1]=r;for(var b=2;b<i;b++)s[b]=n[b];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);