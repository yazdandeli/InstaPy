(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{63:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return m}));var n=a(2),l=a(6),r=(a(0),a(73)),o=["components"],i={title:"Relationship Tools"},b={unversionedId:"relationship-tools",id:"relationship-tools",isDocsHomePage:!1,title:"Relationship Tools",description:"Grab Followers of a user",source:"@site/../docs/relationship-tools.md",slug:"/relationship-tools",permalink:"/relationship-tools",editUrl:"https://github.com/timgrossmann/InstaPy/edit/master/website/../docs/relationship-tools.md",version:"current",sidebar:"docs",previous:{title:"Instance Settings",permalink:"/instance-settings"},next:{title:"Automate InstaPy",permalink:"/automate-instapy"}},s=[{value:"Grab Followers of a user",id:"grab-followers-of-a-user",children:[]},{value:"Grab Following of a user",id:"grab-following-of-a-user",children:[]},{value:"Pick Unfollowers of a user",id:"pick-unfollowers-of-a-user",children:[]},{value:"Pick Nonfollowers of a user",id:"pick-nonfollowers-of-a-user",children:[]},{value:"Pick Fans of a user",id:"pick-fans-of-a-user",children:[]},{value:"Pick Mutual Following of a user",id:"pick-mutual-following-of-a-user",children:[]}],c={rightToc:s};function m(e){var t=e.components,a=Object(l.a)(e,o);return Object(r.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h3",{id:"grab-followers-of-a-user"},"Grab Followers of a user"),Object(r.b)("h6",{id:"gets-and-returns-followers-of-the-given-user-in-desired-amount-also-can-save-locally"},"Gets and returns ",Object(r.b)("inlineCode",{parentName:"h6"},"followers")," of the given user in desired amount, also can save locally"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'popeye_followers = session.grab_followers(username="Popeye", amount="full", live_match=True, store_locally=True)\n##now, `popeye_followers` variable which is a list- holds the `Followers` data of "Popeye" at requested time\n')),Object(r.b)("h4",{id:"parameters"},"Parameters:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"username"),":\nA desired username to grab its followers"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It can be your ",Object(r.b)("inlineCode",{parentName:"li"},"own")," username ",Object(r.b)("strong",{parentName:"li"},"OR")," a ",Object(r.b)("em",{parentName:"li"},"username of some ",Object(r.b)("inlineCode",{parentName:"em"},"non-private")," account."))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"amount"),":\nDefines the desired amount of usernames to grab from the given account"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'amount="full"'),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Grabs followers ",Object(r.b)("strong",{parentName:"li"},"entirely")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"amount=3089"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Grabs ",Object(r.b)("inlineCode",{parentName:"li"},"3089")," usernames ",Object(r.b)("strong",{parentName:"li"},"if exist"),", ",Object(r.b)("em",{parentName:"li"},"if not"),", grabs ",Object(r.b)("strong",{parentName:"li"},"available")," amount")))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"live_match"),":\nDefines the method of grabbing ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," data"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Knowledge Base"),":\nEvery time you grab ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," data in ",Object(r.b)("inlineCode",{parentName:"p"},'"full"')," range of ",Object(r.b)("strong",{parentName:"p"},"any")," user, it is also gonna be ",Object(r.b)("em",{parentName:"p"},"stored in some corner")," of ",Object(r.b)("inlineCode",{parentName:"p"},"InstaPy")," ",Object(r.b)("strong",{parentName:"p"},"for that session"),".")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=False"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"If the user ",Object(r.b)("strong",{parentName:"li"},"already do have")," a ",Object(r.b)("inlineCode",{parentName:"li"},"Followers")," data loaded ",Object(r.b)("em",{parentName:"li"},"earlier")," in the ",Object(r.b)("strong",{parentName:"li"},"same")," session, it will run a ",Object(r.b)("em",{parentName:"li"},"smart")," ",Object(r.b)("inlineCode",{parentName:"li"},"data-matching")," ",Object(r.b)("em",{parentName:"li"},"algorithm"),".\nAnd ",Object(r.b)("strong",{parentName:"li"},"there"),", it will ",Object(r.b)("strong",{parentName:"li"},"load only the new data")," ",Object(r.b)("em",{parentName:"li"},"from the server")," and then ",Object(r.b)("strong",{parentName:"li"},"return a compact result")," of ",Object(r.b)("em",{parentName:"li"},"current data"),".\nThe ",Object(r.b)("em",{parentName:"li"},"algorithm")," ",Object(r.b)("strong",{parentName:"li"},"works like"),": ",Object(r.b)("em",{parentName:"li"},"load the usernames ",Object(r.b)("strong",{parentName:"em"},"until hits the")," ones from the ",Object(r.b)("strong",{parentName:"em"},"previous query")," at certain amount"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Also if")," the ",Object(r.b)("inlineCode",{parentName:"li"},"live_match")," is ",Object(r.b)("inlineCode",{parentName:"li"},"False")," and the user has ",Object(r.b)("strong",{parentName:"li"},"no any")," ",Object(r.b)("em",{parentName:"li"},"sessional")," ",Object(r.b)("inlineCode",{parentName:"li"},"Followers")," data, ",Object(r.b)("strong",{parentName:"li"},"then")," it will load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data at ",Object(r.b)("em",{parentName:"li"},"requested range"),"."),Object(r.b)("li",{parentName:"ul"},"As a ",Object(r.b)("strong",{parentName:"li"},"result"),", ",Object(r.b)("inlineCode",{parentName:"li"},"live_match=False")," saves lots of ",Object(r.b)("inlineCode",{parentName:"li"},"precious time")," and ",Object(r.b)("inlineCode",{parentName:"li"},"server requests"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=True"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"It will ",Object(r.b)("strong",{parentName:"li"},"always")," load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data from the server at ",Object(r.b)("em",{parentName:"li"},"requested range"),".")))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"store_locally"),":\nGives the ",Object(r.b)("em",{parentName:"p"},"option")," to ",Object(r.b)("inlineCode",{parentName:"p"},"save")," the loaded ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," data in a ",Object(r.b)("strong",{parentName:"p"},"local storage"),"\nThe files will be saved ",Object(r.b)("em",{parentName:"p"},"into")," your ",Object(r.b)("strong",{parentName:"p"},"logs folder"),", ",Object(r.b)("inlineCode",{parentName:"p"},"~/InstaPy/logs/YourOwnUsername/relationship_data/Popeye/followers/")," directory.\nSample ",Object(r.b)("strong",{parentName:"p"},"filename")," ",Object(r.b)("inlineCode",{parentName:"p"},"14-06-2018~full~6874.json"),":"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"14-06-2018")," means the ",Object(r.b)("strong",{parentName:"li"},"time")," of the data acquisition."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'"full"')," means the ",Object(r.b)("strong",{parentName:"li"},"range")," of the data acquisition;\n",Object(r.b)("em",{parentName:"li"},"If the data is requested at the range ",Object(r.b)("strong",{parentName:"em"},"else than")," ",Object(r.b)("inlineCode",{parentName:"em"},'"full"'),", it will write ",Object(r.b)("strong",{parentName:"em"},"that")," range"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"6874")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the usernames retrieved."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"json")," is the ",Object(r.b)("strong",{parentName:"li"},"filetype")," and the data is stored as a ",Object(r.b)("inlineCode",{parentName:"li"},"list")," in it.")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"verified_only"),":\nGives the ",Object(r.b)("em",{parentName:"p"},"option")," to only return followers with a Verified status."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"verified_only=True"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Only returns followers that contain ",Object(r.b)("inlineCode",{parentName:"li"},"is_verified")," key"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"verified_only=False"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Default option, Returns all followers for user")))),Object(r.b)("p",null,"There are ",Object(r.b)("strong",{parentName:"p"},"several")," ",Object(r.b)("inlineCode",{parentName:"p"},"use cases")," of this tool for ",Object(r.b)("strong",{parentName:"p"},"various purposes"),".\n",Object(r.b)("em",{parentName:"p"},"E.g."),", inside your ",Object(r.b)("strong",{parentName:"p"},"quickstart")," script, you can ",Object(r.b)("strong",{parentName:"p"},"do")," ",Object(r.b)("em",{parentName:"p"},"something like this"),":"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'#get followers of "Popeye" and "Cinderella"\npopeye_followers = session.grab_followers(username="Popeye", amount="full", live_match=True, store_locally=True)\nsleep(600)\ncinderella_followers = session.grab_followers(username="Cinderella", amount="full", live_match=True, store_locally=True)\n\n#find the users following "Popeye" WHO also follow "Cinderella" :D\npopeye_cinderella_followers = [follower for follower in popeye_followers if follower in cinderella_followers]\n')),Object(r.b)("h4",{id:"pros"},"PROs"),Object(r.b)("p",null,"You can ",Object(r.b)("strong",{parentName:"p"},"use")," this tool to take a ",Object(r.b)("strong",{parentName:"p"},"backup")," of ",Object(r.b)("em",{parentName:"p"},"your")," ",Object(r.b)("strong",{parentName:"p"},"or")," ",Object(r.b)("em",{parentName:"p"},"any other user's")," ",Object(r.b)("strong",{parentName:"p"},"current")," followers."),Object(r.b)("ins",{class:"adsbygoogle","data-ad-layout":"in-article","data-ad-format":"fluid","data-ad-client":"ca-pub-4875789012193531","data-ad-slot":"9530237054"}),Object(r.b)("script",null,"(adsbygoogle = window.adsbygoogle || []).push(",");"),Object(r.b)("h3",{id:"grab-following-of-a-user"},"Grab Following of a user"),Object(r.b)("h6",{id:"gets-and-returns-following-of-the-given-user-in-desired-amount-also-can-save-locally"},"Gets and returns ",Object(r.b)("inlineCode",{parentName:"h6"},"following")," of the given user in desired amount, also can save locally"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'lazySmurf_following = session.grab_following(username="lazy.smurf", amount="full", live_match=True, store_locally=True)\n##now, `lazySmurf_following` variable which is a list- holds the `Following` data of "lazy.smurf" at requested time\n')),Object(r.b)("h4",{id:"parameters-1"},"Parameters:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"username"),":\nA desired username to grab its following"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It can be your ",Object(r.b)("inlineCode",{parentName:"li"},"own")," username ",Object(r.b)("strong",{parentName:"li"},"OR")," a ",Object(r.b)("em",{parentName:"li"},"username of some ",Object(r.b)("inlineCode",{parentName:"em"},"non-private")," account."))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"amount"),":\nDefines the desired amount of usernames to grab from the given account"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'amount="full"'),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Grabs following ",Object(r.b)("strong",{parentName:"li"},"entirely")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"amount=3089"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Grabs ",Object(r.b)("inlineCode",{parentName:"li"},"3089")," usernames ",Object(r.b)("strong",{parentName:"li"},"if exist"),", ",Object(r.b)("em",{parentName:"li"},"if not"),", grabs ",Object(r.b)("strong",{parentName:"li"},"available")," amount")))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"live_match"),":\nDefines the method of grabbing ",Object(r.b)("inlineCode",{parentName:"p"},"Following")," data"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Knowledge Base"),":\nEvery time you grab ",Object(r.b)("inlineCode",{parentName:"p"},"Following")," data in ",Object(r.b)("inlineCode",{parentName:"p"},'"full"')," range of ",Object(r.b)("strong",{parentName:"p"},"any")," user, it is also gonna be ",Object(r.b)("em",{parentName:"p"},"stored in some corner")," of ",Object(r.b)("inlineCode",{parentName:"p"},"InstaPy")," ",Object(r.b)("strong",{parentName:"p"},"for that session"),".")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=False"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"If the user ",Object(r.b)("strong",{parentName:"li"},"already do have")," a ",Object(r.b)("inlineCode",{parentName:"li"},"Following")," data loaded ",Object(r.b)("em",{parentName:"li"},"earlier")," in the ",Object(r.b)("strong",{parentName:"li"},"same")," session, it will run a ",Object(r.b)("em",{parentName:"li"},"smart")," ",Object(r.b)("inlineCode",{parentName:"li"},"data-matching")," ",Object(r.b)("em",{parentName:"li"},"algorithm"),".\nAnd ",Object(r.b)("strong",{parentName:"li"},"there"),", it will ",Object(r.b)("strong",{parentName:"li"},"load only the new data")," ",Object(r.b)("em",{parentName:"li"},"from the server")," and then ",Object(r.b)("strong",{parentName:"li"},"return a compact result")," of ",Object(r.b)("em",{parentName:"li"},"current data"),".\nThe ",Object(r.b)("em",{parentName:"li"},"algorithm")," ",Object(r.b)("strong",{parentName:"li"},"works like"),": ",Object(r.b)("em",{parentName:"li"},"load the usernames ",Object(r.b)("strong",{parentName:"em"},"until hits the")," ones from the ",Object(r.b)("strong",{parentName:"em"},"previous query")," at certain amount"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Also if")," the ",Object(r.b)("inlineCode",{parentName:"li"},"live_match")," is ",Object(r.b)("inlineCode",{parentName:"li"},"False")," and the user has ",Object(r.b)("strong",{parentName:"li"},"no any")," ",Object(r.b)("em",{parentName:"li"},"sessional")," ",Object(r.b)("inlineCode",{parentName:"li"},"Following")," data, ",Object(r.b)("strong",{parentName:"li"},"then")," it will load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data at ",Object(r.b)("em",{parentName:"li"},"requested range"),"."),Object(r.b)("li",{parentName:"ul"},"As a ",Object(r.b)("strong",{parentName:"li"},"result"),", ",Object(r.b)("inlineCode",{parentName:"li"},"live_match=False")," saves lots of ",Object(r.b)("inlineCode",{parentName:"li"},"precious time")," and ",Object(r.b)("inlineCode",{parentName:"li"},"server requests"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=True"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"It will ",Object(r.b)("strong",{parentName:"li"},"always")," load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data from the server at ",Object(r.b)("em",{parentName:"li"},"requested range"),".")))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"store_locally"),":\nGives the ",Object(r.b)("em",{parentName:"p"},"option")," to ",Object(r.b)("inlineCode",{parentName:"p"},"save")," the loaded ",Object(r.b)("inlineCode",{parentName:"p"},"Following")," data in a ",Object(r.b)("strong",{parentName:"p"},"local storage"),"\nThe files will be saved ",Object(r.b)("em",{parentName:"p"},"into")," your ",Object(r.b)("strong",{parentName:"p"},"logs folder"),", ",Object(r.b)("inlineCode",{parentName:"p"},"~/InstaPy/logs/YourOwnUsername/relationship_data/lazy.smurf/following/")," directory.\nSample ",Object(r.b)("strong",{parentName:"p"},"filename")," ",Object(r.b)("inlineCode",{parentName:"p"},"15-06-2018~full~2409.json"),":"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"15-06-2018")," means the ",Object(r.b)("strong",{parentName:"li"},"time")," of the data acquisition."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'"full"')," means the ",Object(r.b)("strong",{parentName:"li"},"range")," of the data acquisition;\n",Object(r.b)("em",{parentName:"li"},"If the data is requested at the range ",Object(r.b)("strong",{parentName:"em"},"else than")," ",Object(r.b)("inlineCode",{parentName:"em"},'"full"'),", it will write ",Object(r.b)("strong",{parentName:"em"},"that")," range"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"2409")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the usernames retrieved."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"json")," is the ",Object(r.b)("strong",{parentName:"li"},"filetype")," and the data is stored as a ",Object(r.b)("inlineCode",{parentName:"li"},"list")," in it.")),Object(r.b)("p",null,"There are ",Object(r.b)("strong",{parentName:"p"},"several")," ",Object(r.b)("inlineCode",{parentName:"p"},"use cases")," of this tool for ",Object(r.b)("strong",{parentName:"p"},"various purposes"),".\n",Object(r.b)("em",{parentName:"p"},"E.g."),", inside your ",Object(r.b)("strong",{parentName:"p"},"quickstart")," script, you can ",Object(r.b)("strong",{parentName:"p"},"do")," ",Object(r.b)("em",{parentName:"p"},"something like this"),":"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'##as we know that all lazy Smurf care is to take some good rest, so by mistake, he can follow somebody WHOM Gargamel also follow!\n#so let\'s find it out to save Smurfs from troubles! :D\n\n#get following of "lazy.smurf" and "Gargamel"\nlazySmurf_following = session.grab_following(username="lazy.smurf", amount="full", live_match=True, store_locally=True)\nsleep(600)\ngargamel_following = session.grab_following(username="Gargamel", amount="full", live_match=True, store_locally=True)\n\n#find the users "lazy.smurf" is following WHOM "Gargamel" also follow :D\nlazySmurf_gargamel_following = [following for following in lazySmurf_following if following in gargamel_following]\n')),Object(r.b)("h4",{id:"pros-1"},"PROs"),Object(r.b)("p",null,"You can ",Object(r.b)("strong",{parentName:"p"},"use")," this tool to take a ",Object(r.b)("strong",{parentName:"p"},"backup")," of ",Object(r.b)("em",{parentName:"p"},"your")," ",Object(r.b)("strong",{parentName:"p"},"or")," ",Object(r.b)("em",{parentName:"p"},"any other user's")," ",Object(r.b)("strong",{parentName:"p"},"current")," following."),Object(r.b)("h3",{id:"pick-unfollowers-of-a-user"},"Pick Unfollowers of a user"),Object(r.b)("h6",{id:"compares-the-followers-stored-in-a-local-storage-against-current-followers-and-returns-absent-followers"},"Compares the ",Object(r.b)("inlineCode",{parentName:"h6"},"followers")," stored in a local storage against current followers and returns absent followers"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'all_unfollowers, active_unfollowers = session.pick_unfollowers(username="Bernard_bear", compare_by="month", compare_track="first", live_match=True, store_locally=True, print_out=True)\n##now, `all_unfollowers` and `all_unfollowers` variables which are lists- hold the `Unfollowers` data of "Bernard_bear" at requested time\n#`all_unfollowers` holds all of the unfollowers WHILST `active_unfollowers` holds the unfollowers WHOM "Bernard_bear" is still following\n')),Object(r.b)("h4",{id:"parameters-2"},"Parameters:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"username"),":\nA desired username to pick its unfollowers"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It can be your ",Object(r.b)("inlineCode",{parentName:"li"},"own")," username ",Object(r.b)("strong",{parentName:"li"},"OR")," a ",Object(r.b)("em",{parentName:"li"},"username of some ",Object(r.b)("inlineCode",{parentName:"em"},"non-private")," account."))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"compare_by"),":\nDefines the ",Object(r.b)("inlineCode",{parentName:"p"},"compare point")," to pick unfollowers"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Available ",Object(r.b)("strong",{parentName:"p"},"value"),"s are:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},'"latest"')," chooses the very latest record from the existing records in the local folder")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},'"earliest"')," chooses the very earliest record from the existing records in the local folder"),Object(r.b)("p",{parentName:"li"},"The compare points below needs a ",Object(r.b)("strong",{parentName:"p"},"compare track")," defined, too:")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},'"day"')," chooses from the existing records of today in the local folder")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},'"month"')," chooses from the existing records of this month in the local folder")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},'"year"')," chooses from the existing records of this year in the local folder"))))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"compare_track"),":\nDefines the track to choose a file to compare for ",Object(r.b)("inlineCode",{parentName:"p"},'"day"'),", ",Object(r.b)("inlineCode",{parentName:"p"},'"month"')," and ",Object(r.b)("inlineCode",{parentName:"p"},'"year"')," compare points"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Available ",Object(r.b)("strong",{parentName:"li"},"value"),"s are:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'"first"')," selects the first record from the given ",Object(r.b)("inlineCode",{parentName:"li"},"day"),", ",Object(r.b)("inlineCode",{parentName:"li"},"month")," or ",Object(r.b)("inlineCode",{parentName:"li"},"year")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'"median"')," selects the median (",Object(r.b)("em",{parentName:"li"},"the one in the middle"),") record from the given ",Object(r.b)("inlineCode",{parentName:"li"},"day"),", ",Object(r.b)("inlineCode",{parentName:"li"},"month")," or ",Object(r.b)("inlineCode",{parentName:"li"},"year")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'"last"')," selects the last record from the given ",Object(r.b)("inlineCode",{parentName:"li"},"day"),", ",Object(r.b)("inlineCode",{parentName:"li"},"month")," or ",Object(r.b)("inlineCode",{parentName:"li"},"year"))))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"live_match"),":\nDefines the method of grabbing ",Object(r.b)("strong",{parentName:"p"},"new")," ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," data to compare with ",Object(r.b)("strong",{parentName:"p"},"existing")," data"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Knowledge Base"),":\nEvery time you grab ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," data in ",Object(r.b)("inlineCode",{parentName:"p"},'"full"')," range of ",Object(r.b)("strong",{parentName:"p"},"any")," user, it is also gonna be ",Object(r.b)("em",{parentName:"p"},"stored in some corner")," of ",Object(r.b)("inlineCode",{parentName:"p"},"InstaPy")," ",Object(r.b)("strong",{parentName:"p"},"for that session"),".")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=False"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"If the user ",Object(r.b)("strong",{parentName:"li"},"already do have")," a ",Object(r.b)("inlineCode",{parentName:"li"},"Followers")," data loaded ",Object(r.b)("em",{parentName:"li"},"earlier")," in the ",Object(r.b)("strong",{parentName:"li"},"same")," session, it will run a ",Object(r.b)("em",{parentName:"li"},"smart")," ",Object(r.b)("inlineCode",{parentName:"li"},"data-matching")," ",Object(r.b)("em",{parentName:"li"},"algorithm"),".\nAnd ",Object(r.b)("strong",{parentName:"li"},"there"),", it will ",Object(r.b)("strong",{parentName:"li"},"load only the new data")," ",Object(r.b)("em",{parentName:"li"},"from the server")," and then ",Object(r.b)("strong",{parentName:"li"},"return a compact result")," of ",Object(r.b)("em",{parentName:"li"},"current data"),".\nThe ",Object(r.b)("em",{parentName:"li"},"algorithm")," ",Object(r.b)("strong",{parentName:"li"},"works like"),": ",Object(r.b)("em",{parentName:"li"},"load the usernames ",Object(r.b)("strong",{parentName:"em"},"until hits the")," ones from the ",Object(r.b)("strong",{parentName:"em"},"previous query")," at certain amount"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Also if")," the ",Object(r.b)("inlineCode",{parentName:"li"},"live_match")," is ",Object(r.b)("inlineCode",{parentName:"li"},"False")," and the user has ",Object(r.b)("strong",{parentName:"li"},"no any")," ",Object(r.b)("em",{parentName:"li"},"sessional")," ",Object(r.b)("inlineCode",{parentName:"li"},"Followers")," data, ",Object(r.b)("strong",{parentName:"li"},"then")," it will load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data at ",Object(r.b)("em",{parentName:"li"},"requested range"),"."),Object(r.b)("li",{parentName:"ul"},"As a ",Object(r.b)("strong",{parentName:"li"},"result"),", ",Object(r.b)("inlineCode",{parentName:"li"},"live_match=False")," saves lots of ",Object(r.b)("inlineCode",{parentName:"li"},"precious time")," and ",Object(r.b)("inlineCode",{parentName:"li"},"server requests"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=True"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"It will ",Object(r.b)("strong",{parentName:"li"},"always")," load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data from the server at ",Object(r.b)("em",{parentName:"li"},"requested range"),".")))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"store_locally"),":\nGives the ",Object(r.b)("em",{parentName:"p"},"option")," to ",Object(r.b)("inlineCode",{parentName:"p"},"save")," the loaded ",Object(r.b)("inlineCode",{parentName:"p"},"Unfollowers")," data in a ",Object(r.b)("strong",{parentName:"p"},"local storage"),"\nThere will be 2 files saved in their own directory:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"all_unfollowers"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Will store all of the unfollowers in there"),Object(r.b)("li",{parentName:"ul"},"Its files will be saved at ",Object(r.b)("strong",{parentName:"li"},"logs folder"),", ",Object(r.b)("inlineCode",{parentName:"li"},"~/InstaPy/logs/YourOwnUsername/relationship_data/Bernard_bear/unfollowers/all_unfollowers/")," directory."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"active_unfollowers"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Will store only the unfollowers WHOM you are currently following."),Object(r.b)("li",{parentName:"ul"},"Its files will be saved at ",Object(r.b)("strong",{parentName:"li"},"logs folder"),", ",Object(r.b)("inlineCode",{parentName:"li"},"~/InstaPy/logs/YourOwnUsername/relationship_data/Bernard_bear/unfollowers/active_unfollowers/")," directory.")))),Object(r.b)("p",null,"Sample ",Object(r.b)("strong",{parentName:"p"},"filename")," ",Object(r.b)("inlineCode",{parentName:"p"},"03-06-2018~all~75.json"),":"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"03-06-2018")," means the ",Object(r.b)("strong",{parentName:"li"},"time")," of the data acquisition."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'"all"')," means that it is all of the unfollowers data;\n",Object(r.b)("em",{parentName:"li"},"*",Object(r.b)("inlineCode",{parentName:"em"},'"active"')," unfollowers files will have ",Object(r.b)("inlineCode",{parentName:"em"},'"active"')," written in there"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"75")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the unfollowers retrieved."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"json")," is the ",Object(r.b)("strong",{parentName:"li"},"filetype")," and the data is stored as a ",Object(r.b)("inlineCode",{parentName:"li"},"list")," in it.")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"print_out"),":\nUse this parameter if you would like the ",Object(r.b)("inlineCode",{parentName:"p"},"see")," those unfollowers ",Object(r.b)("strong",{parentName:"p"},"printed")," into the ",Object(r.b)("strong",{parentName:"p"},"console output")," ",Object(r.b)("em",{parentName:"p"},"right after finding them"),"."),Object(r.b)("p",null,"There are ",Object(r.b)("strong",{parentName:"p"},"several")," ",Object(r.b)("inlineCode",{parentName:"p"},"use cases")," of this tool for ",Object(r.b)("strong",{parentName:"p"},"various purposes"),"."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"You can the get the unfollowers you have had from the ",Object(r.b)("strong",{parentName:"li"},"start of the")," ",Object(r.b)("em",{parentName:"li"},"year"),", or from the ",Object(r.b)("strong",{parentName:"li"},"middle of the")," ",Object(r.b)("em",{parentName:"li"},"year")," or from the start of the ",Object(r.b)("strong",{parentName:"li"},"month"),", etc.\nAnd then, e.g. do some ",Object(r.b)("inlineCode",{parentName:"li"},"useful")," ",Object(r.b)("strong",{parentName:"li"},"analysis")," with that ",Object(r.b)("em",{parentName:"li"},"generated unfollowers data"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("em",{parentName:"li"},"And")," you can also ",Object(r.b)("strong",{parentName:"li"},"find")," the unfollowers to ",Object(r.b)("inlineCode",{parentName:"li"},"block")," them ",Object(r.b)("strong",{parentName:"li"},"all"),"."),Object(r.b)("li",{parentName:"ul"},"Also, you can ",Object(r.b)("strong",{parentName:"li"},"unfollow back")," those ",Object(r.b)("inlineCode",{parentName:"li"},"active unfollowers")," ",Object(r.b)("em",{parentName:"li"},"right away"),":")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'#find all of the active unfollowers of Bernard bear\nall_unfollowers, active_unfollowers = session.pick_unfollowers(username="Bernard_bear", compare_by="earliest", compare_track="first", live_match=True, store_locally=True, print_out=True)\nsleep(200)\n#let\'s unfollow them immediately cos Bernard will be angry if heards about those unfollowers! :D\nsession.unfollow_users(amount=len(active_unfollowers), customList=(True, active_unfollowers, "all"), style="RANDOM", unfollow_after=None, sleep_delay=600)\n')),Object(r.b)("ins",{class:"adsbygoogle","data-ad-layout":"in-article","data-ad-format":"fluid","data-ad-client":"ca-pub-4875789012193531","data-ad-slot":"9530237054"}),Object(r.b)("script",null,"(adsbygoogle = window.adsbygoogle || []).push(",");"),Object(r.b)("h3",{id:"pick-nonfollowers-of-a-user"},"Pick Nonfollowers of a user"),Object(r.b)("h6",{id:"compares-the-followers-data-against-following-data-of-a-user-and-returns-the-nonfollowers-data"},"Compares the ",Object(r.b)("inlineCode",{parentName:"h6"},"Followers")," data against ",Object(r.b)("inlineCode",{parentName:"h6"},"Following")," data of a user and returns the ",Object(r.b)("inlineCode",{parentName:"h6"},"Nonfollowers")," data"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'scoobyDoo_nonfollowers = session.pick_nonfollowers(username="ScoobyDoo", live_match=True, store_locally=True)\n#now, `scoobyDoo_nonfollowers` variable which is a list- holds the `Nonfollowers` data of "ScoobyDoo" at requested time\n')),Object(r.b)("h4",{id:"parameters-3"},"Parameters:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"username"),":\nA desired username to pick its nonfollowers"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It can be your ",Object(r.b)("inlineCode",{parentName:"li"},"own")," username ",Object(r.b)("strong",{parentName:"li"},"OR")," a ",Object(r.b)("em",{parentName:"li"},"username of some ",Object(r.b)("inlineCode",{parentName:"em"},"non-private")," account."))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"live_match"),":\nDefines the method of grabbing ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Following")," data to compare with each other to find ",Object(r.b)("strong",{parentName:"p"},"nonfollowers")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Knowledge Base"),":\nEvery time you grab ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," and/or ",Object(r.b)("inlineCode",{parentName:"p"},"Following")," data in ",Object(r.b)("inlineCode",{parentName:"p"},'"full"')," range of ",Object(r.b)("strong",{parentName:"p"},"any")," user, it is also gonna be ",Object(r.b)("em",{parentName:"p"},"stored in some corner")," of ",Object(r.b)("inlineCode",{parentName:"p"},"InstaPy")," ",Object(r.b)("strong",{parentName:"p"},"for that session"),".")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=False"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"If the user ",Object(r.b)("strong",{parentName:"li"},"already do have")," a ",Object(r.b)("inlineCode",{parentName:"li"},"Followers")," and/or ",Object(r.b)("inlineCode",{parentName:"li"},"Following")," data loaded ",Object(r.b)("em",{parentName:"li"},"earlier")," in the ",Object(r.b)("strong",{parentName:"li"},"same")," session, it will run a ",Object(r.b)("em",{parentName:"li"},"smart")," ",Object(r.b)("inlineCode",{parentName:"li"},"data-matching")," ",Object(r.b)("em",{parentName:"li"},"algorithm"),".\nAnd ",Object(r.b)("strong",{parentName:"li"},"there"),", it will ",Object(r.b)("strong",{parentName:"li"},"load only the new data")," ",Object(r.b)("em",{parentName:"li"},"from the server")," and then ",Object(r.b)("strong",{parentName:"li"},"return a compact result")," of ",Object(r.b)("em",{parentName:"li"},"current data"),".\nThe ",Object(r.b)("em",{parentName:"li"},"algorithm")," ",Object(r.b)("strong",{parentName:"li"},"works like"),": ",Object(r.b)("em",{parentName:"li"},"load the usernames ",Object(r.b)("strong",{parentName:"em"},"until hits the")," ones from the ",Object(r.b)("strong",{parentName:"em"},"previous query")," at certain amount"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Also if")," the ",Object(r.b)("inlineCode",{parentName:"li"},"live_match")," is ",Object(r.b)("inlineCode",{parentName:"li"},"False")," and the user has ",Object(r.b)("strong",{parentName:"li"},"no any")," ",Object(r.b)("em",{parentName:"li"},"sessional")," ",Object(r.b)("inlineCode",{parentName:"li"},"Followers")," and/or ",Object(r.b)("inlineCode",{parentName:"li"},"Following")," data, ",Object(r.b)("strong",{parentName:"li"},"then")," it will load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data at ",Object(r.b)("em",{parentName:"li"},"requested range"),"."),Object(r.b)("li",{parentName:"ul"},"As a ",Object(r.b)("strong",{parentName:"li"},"result"),", ",Object(r.b)("inlineCode",{parentName:"li"},"live_match=False")," saves lots of ",Object(r.b)("inlineCode",{parentName:"li"},"precious time")," and ",Object(r.b)("inlineCode",{parentName:"li"},"server requests"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=True"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"It will ",Object(r.b)("strong",{parentName:"li"},"always")," load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data from the server at ",Object(r.b)("em",{parentName:"li"},"requested range"),".")))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"store_locally"),":\nGives the ",Object(r.b)("em",{parentName:"p"},"option")," to ",Object(r.b)("inlineCode",{parentName:"p"},"save")," the loaded ",Object(r.b)("inlineCode",{parentName:"p"},"Nonfollowers")," data in a ",Object(r.b)("strong",{parentName:"p"},"local storage"),"\nThe files will be saved ",Object(r.b)("em",{parentName:"p"},"into")," your ",Object(r.b)("strong",{parentName:"p"},"logs folder"),", ",Object(r.b)("inlineCode",{parentName:"p"},"~/InstaPy/logs/YourOwnUsername/relationship_data/ScoobyDoo/nonfollowers/")," directory.\nSample ",Object(r.b)("strong",{parentName:"p"},"filename")," ",Object(r.b)("inlineCode",{parentName:"p"},"01-06-2018~[5886-3575]~2465.json"),":"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"01-06-2018")," means the ",Object(r.b)("strong",{parentName:"li"},"time")," of the data acquisition."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"5886")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the followers retrieved."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"3575")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the following retrieved."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"2465")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the nonfollowers picked."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"json")," is the ",Object(r.b)("strong",{parentName:"li"},"filetype")," and the data is stored as a ",Object(r.b)("inlineCode",{parentName:"li"},"list")," in it.")),Object(r.b)("p",null,"There are ",Object(r.b)("strong",{parentName:"p"},"several")," ",Object(r.b)("inlineCode",{parentName:"p"},"use cases")," of this tool for ",Object(r.b)("strong",{parentName:"p"},"various purposes"),"."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"You can get the nonfollowers of several users and then do analysis."),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("em",{parentName:"p"},"e.g., in this example Scooby Do used it like this"),":"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-python"},'##Scooby Doo always wonders a lot and this time he wonders if there are people Shaggy is following WHO do not follow him back...\nshaggy_nonfollowers = session.pick_nonfollowers(username="Shaggy", live_match=True, store_locally=True)\n\n#now Scooby Doo will tell his friend Shaggy about this, who knows, maybe Shaggy will unfollow them all or even add to block :D\n')))))),Object(r.b)("h3",{id:"pick-fans-of-a-user"},"Pick Fans of a user"),Object(r.b)("h6",{id:"returns-fans-data--all-of-the-accounts-who-do-follow-the-user-whom-user-itself-do-not-follow-back"},"Returns Fans data- all of the accounts who do follow the user WHOM user itself do not follow back"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'smurfette_fans = session.pick_fans(username="Smurfette", live_match=True, store_locally=True)\n#now, `smurfette_fans` variable which is a list- holds the `Fans` data of "Smurfette" at requested time\n')),Object(r.b)("h4",{id:"parameters-4"},"Parameters:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"username"),":\nA desired username to pick its fans"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It can be your ",Object(r.b)("inlineCode",{parentName:"li"},"own")," username ",Object(r.b)("strong",{parentName:"li"},"OR")," a ",Object(r.b)("em",{parentName:"li"},"username of some ",Object(r.b)("inlineCode",{parentName:"em"},"non-private")," account."))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"live_match"),":\nDefines the method of grabbing ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Following")," data to compare with each other to find ",Object(r.b)("strong",{parentName:"p"},"fans")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Knowledge Base"),":\nEvery time you grab ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," and/or ",Object(r.b)("inlineCode",{parentName:"p"},"Following")," data in ",Object(r.b)("inlineCode",{parentName:"p"},'"full"')," range of ",Object(r.b)("strong",{parentName:"p"},"any")," user, it is also gonna be ",Object(r.b)("em",{parentName:"p"},"stored in some corner")," of ",Object(r.b)("inlineCode",{parentName:"p"},"InstaPy")," ",Object(r.b)("strong",{parentName:"p"},"for that session"),".")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=False"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"If the user ",Object(r.b)("strong",{parentName:"li"},"already do have")," a ",Object(r.b)("inlineCode",{parentName:"li"},"Followers")," and/or ",Object(r.b)("inlineCode",{parentName:"li"},"Following")," data loaded ",Object(r.b)("em",{parentName:"li"},"earlier")," in the ",Object(r.b)("strong",{parentName:"li"},"same")," session, it will run a ",Object(r.b)("em",{parentName:"li"},"smart")," ",Object(r.b)("inlineCode",{parentName:"li"},"data-matching")," ",Object(r.b)("em",{parentName:"li"},"algorithm"),".\nAnd ",Object(r.b)("strong",{parentName:"li"},"there"),", it will ",Object(r.b)("strong",{parentName:"li"},"load only the new data")," ",Object(r.b)("em",{parentName:"li"},"from the server")," and then ",Object(r.b)("strong",{parentName:"li"},"return a compact result")," of ",Object(r.b)("em",{parentName:"li"},"current data"),".\nThe ",Object(r.b)("em",{parentName:"li"},"algorithm")," ",Object(r.b)("strong",{parentName:"li"},"works like"),": ",Object(r.b)("em",{parentName:"li"},"load the usernames ",Object(r.b)("strong",{parentName:"em"},"until hits the")," ones from the ",Object(r.b)("strong",{parentName:"em"},"previous query")," at certain amount"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Also if")," the ",Object(r.b)("inlineCode",{parentName:"li"},"live_match")," is ",Object(r.b)("inlineCode",{parentName:"li"},"False")," and the user has ",Object(r.b)("strong",{parentName:"li"},"no any")," ",Object(r.b)("em",{parentName:"li"},"sessional")," ",Object(r.b)("inlineCode",{parentName:"li"},"Followers")," and/or ",Object(r.b)("inlineCode",{parentName:"li"},"Following")," data, ",Object(r.b)("strong",{parentName:"li"},"then")," it will load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data at ",Object(r.b)("em",{parentName:"li"},"requested range"),"."),Object(r.b)("li",{parentName:"ul"},"As a ",Object(r.b)("strong",{parentName:"li"},"result"),", ",Object(r.b)("inlineCode",{parentName:"li"},"live_match=False")," saves lots of ",Object(r.b)("inlineCode",{parentName:"li"},"precious time")," and ",Object(r.b)("inlineCode",{parentName:"li"},"server requests"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=True"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"It will ",Object(r.b)("strong",{parentName:"li"},"always")," load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data from the server at ",Object(r.b)("em",{parentName:"li"},"requested range"),".")))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"store_locally"),":\nGives the ",Object(r.b)("em",{parentName:"p"},"option")," to ",Object(r.b)("inlineCode",{parentName:"p"},"save")," the loaded ",Object(r.b)("inlineCode",{parentName:"p"},"Fans")," data in a ",Object(r.b)("strong",{parentName:"p"},"local storage"),"\nThe files will be saved ",Object(r.b)("em",{parentName:"p"},"into")," your ",Object(r.b)("strong",{parentName:"p"},"logs folder"),", ",Object(r.b)("inlineCode",{parentName:"p"},"~/InstaPy/logs/YourOwnUsername/relationship_data/Smurfette/fans/")," directory.\nSample ",Object(r.b)("strong",{parentName:"p"},"filename")," ",Object(r.b)("inlineCode",{parentName:"p"},"05-06-2018~[4591-2575]~3477.json"),":"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"05-06-2018")," means the ",Object(r.b)("strong",{parentName:"li"},"time")," of the data acquisition."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"4591")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the followers retrieved."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"2575")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the following retrieved."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"3477")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the fans picked."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"json")," is the ",Object(r.b)("strong",{parentName:"li"},"filetype")," and the data is stored as a ",Object(r.b)("inlineCode",{parentName:"li"},"list")," in it.")),Object(r.b)("p",null,"There are ",Object(r.b)("strong",{parentName:"p"},"several")," ",Object(r.b)("inlineCode",{parentName:"p"},"use cases")," of this tool for ",Object(r.b)("strong",{parentName:"p"},"various purposes"),"."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"You can get the fans of several users and then do analysis.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("em",{parentName:"li"},"e.g., in this example Smurfette used it like this"),":",Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-python"},'##Smurfette is so famous in the place and she wonders which smurfs is following her WHOM she doesn\'t even know of :D\nsmurfette_fans = session.pick_fans(username="Smurfette", live_match=True, store_locally=True)\n#and now, maybe she will follow back some of the smurfs whom she may know :P\n')))))),Object(r.b)("h3",{id:"pick-mutual-following-of-a-user"},"Pick Mutual Following of a user"),Object(r.b)("h6",{id:"returns-mutual-following-data--all-of-the-accounts-who-do-follow-the-user-whom-user-itself-also-do-follow-back"},"Returns ",Object(r.b)("inlineCode",{parentName:"h6"},"Mutual Following")," data- all of the accounts who do follow the user WHOM user itself ",Object(r.b)("strong",{parentName:"h6"},"also")," do follow back"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'Winnie_mutualFollowing = session.pick_mutual_following(username="WinnieThePooh", live_match=True, store_locally=True)\n#now, `Winnie_mutualFollowing` variable which is a list- holds the `Mutual Following` data of "WinnieThePooh" at requested time\n')),Object(r.b)("h4",{id:"parameters-5"},"Parameters:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"username"),":\nA desired username to pick its mutual following"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It can be your ",Object(r.b)("inlineCode",{parentName:"li"},"own")," username ",Object(r.b)("strong",{parentName:"li"},"OR")," a ",Object(r.b)("em",{parentName:"li"},"username of some ",Object(r.b)("inlineCode",{parentName:"em"},"non-private")," account."))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"live_match"),":\nDefines the method of grabbing ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Following")," data to compare with each other to find ",Object(r.b)("strong",{parentName:"p"},"mutual following")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Knowledge Base"),":\nEvery time you grab ",Object(r.b)("inlineCode",{parentName:"p"},"Followers")," and/or ",Object(r.b)("inlineCode",{parentName:"p"},"Following")," data in ",Object(r.b)("inlineCode",{parentName:"p"},'"full"')," range of ",Object(r.b)("strong",{parentName:"p"},"any")," user, it is also gonna be ",Object(r.b)("em",{parentName:"p"},"stored in some corner")," of ",Object(r.b)("inlineCode",{parentName:"p"},"InstaPy")," ",Object(r.b)("strong",{parentName:"p"},"for that session"),".")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=False"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"If the user ",Object(r.b)("strong",{parentName:"li"},"already do have")," a ",Object(r.b)("inlineCode",{parentName:"li"},"Followers")," and/or ",Object(r.b)("inlineCode",{parentName:"li"},"Following")," data loaded ",Object(r.b)("em",{parentName:"li"},"earlier")," in the ",Object(r.b)("strong",{parentName:"li"},"same")," session, it will run a ",Object(r.b)("em",{parentName:"li"},"smart")," ",Object(r.b)("inlineCode",{parentName:"li"},"data-matching")," ",Object(r.b)("em",{parentName:"li"},"algorithm"),".\nAnd ",Object(r.b)("strong",{parentName:"li"},"there"),", it will ",Object(r.b)("strong",{parentName:"li"},"load only the new data")," ",Object(r.b)("em",{parentName:"li"},"from the server")," and then ",Object(r.b)("strong",{parentName:"li"},"return a compact result")," of ",Object(r.b)("em",{parentName:"li"},"current data"),".\nThe ",Object(r.b)("em",{parentName:"li"},"algorithm")," ",Object(r.b)("strong",{parentName:"li"},"works like"),": ",Object(r.b)("em",{parentName:"li"},"load the usernames ",Object(r.b)("strong",{parentName:"em"},"until hits the")," ones from the ",Object(r.b)("strong",{parentName:"em"},"previous query")," at certain amount"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Also if")," the ",Object(r.b)("inlineCode",{parentName:"li"},"live_match")," is ",Object(r.b)("inlineCode",{parentName:"li"},"False")," and the user has ",Object(r.b)("strong",{parentName:"li"},"no any")," ",Object(r.b)("em",{parentName:"li"},"sessional")," ",Object(r.b)("inlineCode",{parentName:"li"},"Followers")," and/or ",Object(r.b)("inlineCode",{parentName:"li"},"Following")," data, ",Object(r.b)("strong",{parentName:"li"},"then")," it will load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data at ",Object(r.b)("em",{parentName:"li"},"requested range"),"."),Object(r.b)("li",{parentName:"ul"},"As a ",Object(r.b)("strong",{parentName:"li"},"result"),", ",Object(r.b)("inlineCode",{parentName:"li"},"live_match=False")," saves lots of ",Object(r.b)("inlineCode",{parentName:"li"},"precious time")," and ",Object(r.b)("inlineCode",{parentName:"li"},"server requests"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"live_match=True"),":",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"It will ",Object(r.b)("strong",{parentName:"li"},"always")," load ",Object(r.b)("inlineCode",{parentName:"li"},"live")," data from the server at ",Object(r.b)("em",{parentName:"li"},"requested range"),".")))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"store_locally"),":\nGives the ",Object(r.b)("em",{parentName:"p"},"option")," to ",Object(r.b)("inlineCode",{parentName:"p"},"save")," the loaded ",Object(r.b)("inlineCode",{parentName:"p"},"Mutual Following")," data in a ",Object(r.b)("strong",{parentName:"p"},"local storage"),"\nThe files will be saved ",Object(r.b)("em",{parentName:"p"},"into")," your ",Object(r.b)("strong",{parentName:"p"},"logs folder"),", ",Object(r.b)("inlineCode",{parentName:"p"},"~/InstaPy/logs/YourOwnUsername/relationship_data/WinnieThePooh/mutual_following/")," directory.\nSample ",Object(r.b)("strong",{parentName:"p"},"filename")," ",Object(r.b)("inlineCode",{parentName:"p"},"11-06-2018~[3872-2571]~1120.json"),":"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"11-06-2018")," means the ",Object(r.b)("strong",{parentName:"li"},"time")," of the data acquisition."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"3872")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the followers retrieved."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"2571")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the following retrieved."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"1120")," means the ",Object(r.b)("strong",{parentName:"li"},"count")," of the mutual following picked."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"json")," is the ",Object(r.b)("strong",{parentName:"li"},"filetype")," and the data is stored as a ",Object(r.b)("inlineCode",{parentName:"li"},"list")," in it.")),Object(r.b)("p",null,"There are ",Object(r.b)("strong",{parentName:"p"},"several")," ",Object(r.b)("inlineCode",{parentName:"p"},"use cases")," of this tool for ",Object(r.b)("strong",{parentName:"p"},"various purposes"),"."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"You can get the mutual following of several users and then do analysis.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("em",{parentName:"li"},"e.g., in this example Winnie The Pooh used it like this"),":",Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-python"},'#Winnie The Pooh is a very friendly guy and almost everybody follows him back, but he wants to be sure about it :D\nWinnie_mutual_following = session.pick_mutual_following(username="WinnieThePooh", live_match=True, store_locally=True)\n##now, he will write a message to his mutual followers to help him get a new honey pot :>\n')))))),Object(r.b)("ins",{class:"adsbygoogle","data-ad-layout":"in-article","data-ad-format":"fluid","data-ad-client":"ca-pub-4875789012193531","data-ad-slot":"9530237054"}),Object(r.b)("script",null,"(adsbygoogle = window.adsbygoogle || []).push(",");"))}m.isMDXComponent=!0},73:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return u}));var n=a(0),l=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=l.a.createContext({}),c=function(e){var t=l.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=c(e.components);return l.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},O=l.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),m=c(a),O=n,u=m["".concat(o,".").concat(O)]||m[O]||p[O]||r;return a?l.a.createElement(u,i(i({ref:t},s),{},{components:a})):l.a.createElement(u,i({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=O;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var s=2;s<r;s++)o[s]=a[s];return l.a.createElement.apply(null,o)}return l.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);